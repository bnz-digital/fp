{"version":3,"sources":["webpack:///./src/runkits/cypress/bad-inheritance.js","webpack:///./src/runkits/cypress/composition-by-aggregation.js","webpack:///./src/runkits/cypress/composition-by-concatenation.js","webpack:///./src/runkits/cypress/composition-by-delegation.js","webpack:///./src/runkits/cypress/utility-functions.js","webpack:///./src/pages/cypress/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Highlighter/index.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/TrailSeparator/index.js","webpack:///./src/components/BreadcrumbTrail/index.js","webpack:///./src/components/PageLayout/index.js","webpack:///./src/components/CodeBlock/index.js"],"names":["bad_inheritance","code","imports","requires","composition_by_aggregation","composition_by_concatenation","composition_by_delegation","utility_functions","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","index_es","assign","mdxType","id","parentName","className","href","Highlighter","theme","language","showLineNumbers","width","height","src","frameBorder","allow","allowFullScreen","CodeBlock","badInheritanceSource","compositionByAggregationSource","compositionByDelegationSource","compositionByConcatenationSource","utilityFunctionsSource","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","SEO","lang","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","siteMetadata","data-element-id","defaultProps","meta","description","DefaultLinks","react_default","Fragment","gatsby_browser_entry","to","style","color","textDecoration","textTransform","display","padding","InductiveLinks","DeductiveLinks","NavLinks","pathname","split","Header","_ref2","siteTitle","backgroundColour","getColour","background","marginBottom","alignItems","margin","maxWidth","flexGrow","flexShrink","HeaderWrapper","es","locationProps","Header_Header","Layout","children","_856328897","paddingTop","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_1__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_2__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_3__","_ref$code","_ref$language","_ref$showLineNumbers","_ref$startingLineNumb","startingLineNumber","_ref$theme","_ref$warn","warn","solarizedLight","solarizedDark","pattern","makeOnClick","e","preventDefault","navigate","Link","test","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","gatsby__WEBPACK_IMPORTED_MODULE_5__","TrailSeparator","BreadcrumbTrail","trail","undefined","map","label","react","key","getCrumbs","PageLayout","_pageContext$frontmat","pageContext","frontmatter","react_runkit__WEBPACK_IMPORTED_MODULE_1__","react_runkit__WEBPACK_IMPORTED_MODULE_1___default","_Highlighter__WEBPACK_IMPORTED_MODULE_2__","_ref$imports","_ref$requires","_useState","useState","show","setShow","useEffect","interval","setInterval","Boolean","window","RunKit","clearInterval","source","nodeVersion"],"mappings":"0KAmCeA,UAAA,CACbC,KApCQ,ovBAqCRC,QANW,GAOXC,SALY,KCICC,EAAA,CACbH,KAtCQ,ulCAuCRC,QANW,GAOXC,SALY,ICACE,EAAA,CACbJ,KApCQ,wjCAqCRC,QANW,GAOXC,SALY,ICOCG,EAAA,CACbL,KAzCQ,ytCA0CRC,QANW,GAOXC,SALY,ICRCI,EAAA,CACbN,KA/BQ,k2BAgCRC,QANW,GAOXC,SALY,qFCdP,IAAMK,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,sIACFC,CAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,EAAAD,CAACP,EAADO,OAAAE,OAAA,GAAeV,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAK5EH,OAAAC,EAAA,EAAAD,CAAA,UACFA,OAAAC,EAAA,EAAAD,CAAA,kCAGAA,OAAAC,EAAA,EAAAD,CAAA,gCAGAA,OAAAC,EAAA,EAAAD,CAAA,yCAGAA,OAAAC,EAAA,EAAAD,CAAA,iDAGAA,OAAAC,EAAA,EAAAD,CAAA,yBAGAA,OAAAC,EAAA,EAAAD,CAAA,uCAGAA,OAAAC,EAAA,EAAAD,CAAA,qEAIEA,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,wBAAP,wBACAJ,OAAAC,EAAA,EAAAD,CAAA,gBAAWA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAAX,wCACAL,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,sJACAL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,sHAEFL,OAAAC,EAAA,EAAAD,CAAA,wFAAmFA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxGC,UAAa,kBADkE,SAAnF,yEAE+FN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACpHC,UAAa,kBAD8E,QAF/F,wFAKAN,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,IAAAA,OAAAE,OAAA,CAAGG,WAAW,KAAQ,CACrBE,KAAQ,8EADT,uEAAH,KAGAP,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,sBAAP,sBACAJ,OAAAC,EAAA,EAAAD,CAAA,8IACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,iOAQjByB,MAAM,OAAON,QAAQ,gBACrBH,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,2EAA+FL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,MAAnB,eAA/F,aAA6JL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,MAAS,CACpLC,UAAa,kBAD6I,SAA7J,YAAH,8BAEuEN,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,WAFvE,gHAGAL,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,sNASjBmB,QAAQ,gBACRH,OAAAC,EAAA,EAAAD,CAAA,iGACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,iQAOhBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,6EACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,sKAMhBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,0EACAA,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,8BAAP,+BACAJ,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,yDAA4D0B,SAAS,OAAOC,iBAAiB,EAAOR,QAAQ,gBAC7HH,OAAAC,EAAA,EAAAD,CAAA,yEAAoEA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACzFC,UAAa,kBADmD,YAApE,iCAE0DN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/EC,UAAa,kBADyC,YAF1D,WAKAN,OAAAC,EAAA,EAAAD,CAAA,8EAAyEA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9FC,UAAa,kBADwD,YAAzE,8DAGAN,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,yBAAH,aAA0EL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,2BAA1E,6EACAL,OAAAC,EAAA,EAAAD,CAAA,6CAAwCA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,SAAxC,4BAA8GL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,mBAA9G,gEAAkOL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACvPC,UAAa,kBADiN,OAAlO,oDAEwEN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7FC,UAAa,kBADuD,SAFxE,4BAKAN,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,iHAGhBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,gBAAWA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAChCC,UAAa,kBADN,wBAAX,uBAE4DN,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,QAF5D,uDAEoJL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,YAFpJ,4BAGAL,OAAAC,EAAA,EAAAD,CAAA,6EACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,0HAKhBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,mEAA8DA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,eAA9D,uBAA6HL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,mBAA7H,gGACAL,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,uCAAP,yCACAJ,OAAAC,EAAA,EAAAD,CAAA,+CACAA,OAAAC,EAAA,EAAAD,CAAA,UAAQY,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,IAChMjB,OAAAC,EAAA,EAAAD,CAAA,mDAA8CA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAA9C,qBACAL,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAADlB,OAAAE,OAAA,GAAeiB,EAAf,CAAqCV,MAAM,OAAON,QAAQ,eAC1DH,OAAAC,EAAA,EAAAD,CAAA,yLACAA,OAAAC,EAAA,EAAAD,CAAA,0FAAqFA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC1GC,UAAa,kBADoE,UAArF,oBAE2CN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAChEC,UAAa,kBAD0B,YAF3C,YAIqCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC1DC,UAAa,kBADoB,YAJrC,gEAMyFN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9GC,UAAa,kBADwE,UANzF,iCAQwDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7EC,UAAa,kBADuC,YARxD,oCAU6DN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAClFC,UAAa,kBAD4C,YAV7D,eAYwCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7DC,UAAa,kBADuB,YAZxC,gCAcyDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9EC,UAAa,kBADwC,YAdzD,KAiBAN,OAAAC,EAAA,EAAAD,CAAA,2DAAsDA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAAtD,+GACAL,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAAH,uEAA0HL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/IC,UAAa,kBADyG,YAA1H,iCAE0DN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/EC,UAAa,kBADyC,UAF1D,0BAIiDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACtEC,UAAa,kBADgC,MAJjD,uDAM0EN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/FC,UAAa,kBADyD,UAN1E,gEAQuFN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC5GC,UAAa,kBADsE,YARvF,YAWAN,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAADlB,OAAAE,OAAA,GAAekB,EAAf,CAA+CjB,QAAQ,eACvDH,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,cAAH,4CAA8FL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACnHC,UAAa,kBAD6E,UAA9F,aAEoCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACzDC,UAAa,kBADmB,YAFpC,YAIqCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC1DC,UAAa,kBADoB,UAJrC,mCAM0DN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/EC,UAAa,kBADyC,YAN1D,6BAQsDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC3EC,UAAa,kBADqC,UARtD,8BAWAN,OAAAC,EAAA,EAAAD,CAAA,2CAAsCA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC3DC,UAAa,kBADqB,UAAtC,4CAEmEN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxFC,UAAa,kBADkD,YAFnE,0BAImDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxEC,UAAa,kBADkC,UAJnD,gFAMuGN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC5HC,UAAa,kBADsF,YANvG,mCASAN,OAAAC,EAAA,EAAAD,CAAA,wBAAmBA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxCC,UAAa,kBADE,UAAnB,sDAE6EN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAClGC,UAAa,kBAD4D,mCAF7E,KAKAN,OAAAC,EAAA,EAAAD,CAAA,kFAA6EA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAClGC,UAAa,kBAD4D,UAA7E,IAE2BN,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,YAF3B,2BAE2FL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAChHC,UAAa,kBAD0E,YAF3F,2CAIoEN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACzFC,UAAa,kBADmD,UAJpE,eAOAN,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAADlB,OAAAE,OAAA,GAAemB,EAAf,CAA8ClB,QAAQ,eACtDH,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,iBAAH,oJAAyML,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9NC,UAAa,kBADwL,UAAzM,qJAGAN,OAAAC,EAAA,EAAAD,CAAA,uGACAA,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAADlB,OAAAE,OAAA,GAAeoB,EAAf,CAAiDnB,QAAQ,eACzDH,OAAAC,EAAA,EAAAD,CAAA,4DAAuDA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,qBAAvD,KACAL,OAAAC,EAAA,EAAAD,CAAA,8CAAyCA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9DC,UAAa,kBADwB,UAAzC,eAEsCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC3DC,UAAa,kBADqB,YAFtC,wIAImKN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxLC,UAAa,kBADkJ,UAJnK,SAMgCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACrDC,UAAa,kBADe,UANhC,yBAQgDN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACrEC,UAAa,kBAD+B,UARhD,8FAWAN,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAADlB,OAAAE,OAAA,GAAeqB,EAAf,CAAuCpB,QAAQ,eAC/CH,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,eAAP,eACAJ,OAAAC,EAAA,EAAAD,CAAA,wOAAmOA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,UAAnO,4CACAL,OAAAC,EAAA,EAAAD,CAAA,oDAA+CA,OAAAC,EAAA,EAAAD,CAAA,IAAAA,OAAAE,OAAA,CAAGG,WAAW,KAAQ,CACjEE,KAAQ,0DADmC,gCAA/C,iCAGAP,OAAAC,EAAA,EAAAD,CAAA,mDACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,0kBAUhByB,MAAM,OAAON,QAAQ,gBACtBH,OAAAC,EAAA,EAAAD,CAAA,sCAAiCA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,UAAjC,yBAA8FL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACnHC,UAAa,kBAD6E,OAA9F,KAEyBN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC9CC,UAAa,kBADQ,QAFzB,KAI0BN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/CC,UAAa,kBADS,MAJ1B,KAMwBN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7CC,UAAa,kBADO,QANxB,KAQ0BN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC/CC,UAAa,kBADS,UAR1B,+DAUuFN,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,qBAVvF,KAWAL,OAAAC,EAAA,EAAAD,CAAA,wDACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,qTAShBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,iCAA4BA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,cAA5B,sBAAiGL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,OAAjG,uDAAgML,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAAhM,wFAA4UL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,QAA5U,WACAL,OAAAC,EAAA,EAAAD,CAAA,wVACAA,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,4EAAoGL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,UAAa,CAC/HC,UAAa,kBADoF,WAApG,KAE4BN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,UAAa,CACvDC,UAAa,kBADY,sBAF5B,SAI2CN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,UAAa,CACtEC,UAAa,kBAD2B,gBAJ3C,MAOHN,OAAAC,EAAA,EAAAD,CAAA,qCAAgCA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACrDC,UAAa,kBADe,WAAhC,KAE6BN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAClDC,UAAa,kBADY,sBAF7B,SAI4CN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACjEC,UAAa,kBAD2B,gBAJ5C,iDAM8EN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACnGC,UAAa,kBAD6D,eAN9E,OAQmCN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CACxDC,UAAa,kBADkB,qBARnC,UAWAN,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,gRAYPmB,QAAQ,gBAClBH,OAAAC,EAAA,EAAAD,CAAA,mHAA8GA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,OAA9G,sFAA4OL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,wBAA5O,uGAA4YL,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,eAA5Y,WACAL,OAAAC,EAAA,EAAAD,CAAA,kDACAA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,kaAUhBmB,QAAQ,gBACTH,OAAAC,EAAA,EAAAD,CAAA,4BAAuBA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC5CC,UAAa,kBADM,cAAvB,sBAGAN,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAaxB,KAAI,04BAmBfmB,QAAQ,gBACVH,OAAAC,EAAA,EAAAD,CAAA,gKACAA,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,0BAAP,6BACAJ,OAAAC,EAAA,EAAAD,CAAA,gDAA2CA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,WAA3C,kBACAL,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,gCAAqDL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,kBAArD,mEACAL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,iFACAL,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,MAAf,uIAEFL,OAAAC,EAAA,EAAAD,CAAA,iHACAA,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,0BAAH,KACAL,OAAAC,EAAA,EAAAD,CAAA,kDAA6CA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,YAA7C,8GAAgML,OAAAC,EAAA,EAAAD,CAAA,UAAQK,WAAW,KAAnB,0DAAhM,uFACAL,OAAAC,EAAA,EAAAD,CAAA,sDAAqDA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,2BAArD,KACAL,OAAAC,EAAA,EAAAD,CAAA,6FACAA,OAAAC,EAAA,EAAAD,CAAA,MAAII,GAAG,qBAAP,0DACAJ,OAAAC,EAAA,EAAAD,CAAA,6GAAwGA,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7HC,UAAa,kBADuF,mBAAxG,qBAEqDN,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,eAFrD,WAEwGL,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAC7HC,UAAa,kBADuF,SAFxG,OAI6BN,OAAAC,EAAA,EAAAD,CAAA,OAAAA,OAAAE,OAAA,CAAMG,WAAW,KAAQ,CAClDC,UAAa,kBADY,UAJ7B,cAWJX,EAAW6B,gBAAiB,oCC5W5B,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAG,IAAAP,EAAA,KAAAA,EAAA,GAcyBQ,QAAOC,QAELC,IAAMC,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,0gBCsBhCK,UAjBU,SAAA/C,GAAiC,IAA9BgD,EAA8BhD,EAA9BgD,SAAUC,EAAoBjD,EAApBiD,cACpC,OAAKA,EAGET,IAAMU,cAAcC,+UAApBC,CAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,uFCHX,SAASC,EAATtD,GAA+B,IAAfuD,EAAevD,EAAfuD,KAAMC,EAASxD,EAATwD,MACZC,EADqBC,EAAAC,KACrBF,KAcR,OACEG,EAAAvB,EAAAa,cAACW,EAAAxB,EAAD,CACEyB,eAAgB,CACdP,QAEFC,MACEA,EACOA,EADF,MACaC,EAAKM,aAAaP,MAChCC,EAAKM,aAAaP,OAGxBI,EAAAvB,EAAAa,cAAA,UAAQhC,IAAI,2BAA2B8C,kBAAgB,YAK7DV,EAAIW,aAAe,CACjBV,KAAI,KACJW,KAAM,GACNC,YAAW,IAGEb,oQCnCf,SAASc,IACP,OACEC,EAAAhC,EAAAa,cAAAmB,EAAAhC,EAAAiC,SAAA,KACED,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,aACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,aAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,aACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,YAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,WACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,eAgBN,SAASC,IACP,OACEV,EAAAhC,EAAAa,cAAAmB,EAAAhC,EAAAiC,SAAA,KACED,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,yBACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,eAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,0BACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,aAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,uBACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,WAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,yBACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,cAgBN,SAASE,IACP,OACEX,EAAAhC,EAAAa,cAAAmB,EAAAhC,EAAAiC,SAAA,KACED,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,6BACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,kBAYAT,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,8BACHC,MAAO,CACLC,MAAK,QACLC,eAAc,OACdC,cAAe,YACfC,QAAS,eACTC,QAAS,aAPb,qBAgBN,SAASG,EAATjF,GACE,OAD+BA,EAAZgD,SACFkC,SAASC,MAAM,KAAK,IACnC,IAAK,YACH,OAAOd,EAAAhC,EAAAa,cAAC6B,EAAD,MACT,IAAK,YACH,OAAOV,EAAAhC,EAAAa,cAAC8B,EAAD,MACT,QACE,OAAOX,EAAAhC,EAAAa,cAACkB,EAAD,OAiBb,IAAMgB,EAAS,SAAAC,GAA6B,IAA1BC,EAA0BD,EAA1BC,UAAWtC,EAAeqC,EAAfrC,SACrBuC,EAdR,SAAoBvC,GAClB,OAAQA,EAASkC,SAASC,MAAM,KAAK,IACnC,IAAK,YACH,MAAO,cACT,IAAK,YACH,MAAO,aACT,IAAK,UACH,MAAO,SACT,QACE,MAAO,iBAKcK,CAAUxC,GAEnC,OACEqB,EAAAhC,EAAAa,cAAA,UACEuB,MAAO,CACLgB,WAAYF,EACZG,aAAY,YAGdrB,EAAAhC,EAAAa,cAAA,OACEuB,MAAO,CACLI,QAAS,OACTc,WAAY,SACZC,OAAM,SACNC,SAAU,IACVf,QAAO,sBAGTT,EAAAhC,EAAAa,cAAA,MAAIuB,MAAO,CAAEmB,OAAQ,EAAGf,QAAS,eAAgBiB,SAAU,IACzDzB,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CACEC,GAAG,IACHC,MAAO,CACLC,MAAK,QACLC,eAAc,SAGfW,IAGLjB,EAAAhC,EAAAa,cAAA,OAAKuB,MAAO,CAAEsB,WAAY,IACxB1B,EAAAhC,EAAAa,cAAC+B,EAAD,CAAUjC,SAAUA,QAgBf,SAASgD,EAAe9F,GACrC,OACEmE,EAAAhC,EAAAa,cAAC+C,EAAA,SAAD,KACG,SAAAC,GAAa,OAAI7B,EAAAhC,EAAAa,cAACiD,EAAD/F,OAAAE,OAAA,GAAY4F,EAAmBhG,MAPvDkF,EAAOnB,aAAe,CACpBqB,UAAS,ICxKIc,IA5BA,SAAApG,GAAkB,IAAfqG,EAAerG,EAAfqG,SACV1C,EAAI2C,EAAA3C,KAUV,OACEU,EAAAhC,EAAAa,cAAAmB,EAAAhC,EAAAiC,SAAA,KACED,EAAAhC,EAAAa,cAAC8C,EAAD,CAAQV,UAAW3B,EAAKF,KAAKM,aAAaP,QAC1Ca,EAAAhC,EAAAa,cAAA,OACEuB,MAAO,CACLmB,OAAM,SACNC,SAAU,IACVf,QAAO,sBACPyB,WAAY,IAGdlC,EAAAhC,EAAAa,cAAA,YAAOmD,wCC7BfvE,EAAAK,EAAAC,EAAA,sBAAAxB,IAAA,IAAAiB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA2E,EAAA1E,EAAA,KAAA2E,EAAA3E,EAAA,KAAA4E,EAAA5E,EAAA,KAOe,SAASlB,EAATZ,GAOZ,IAAA2G,EAAA3G,EANDZ,YAMC,IAAAuH,EANM,GAMNA,EAAAC,EAAA5G,EALDc,gBAKC,IAAA8F,EALU,aAKVA,EAAAC,EAAA7G,EAJDe,uBAIC,IAAA8F,KAAAC,EAAA9G,EAHD+G,0BAGC,IAAAD,EAHoB,EAGpBA,EAAAE,EAAAhH,EAFDa,aAEC,IAAAmG,EAFO,QAEPA,EAAAC,EAAAjH,EADDkH,YACC,IAAAD,EADM,kBAAM,MACZA,EACD,OACElF,EAAAM,EAAAa,cAAAnB,EAAAM,EAAAiC,SAAA,KACG4C,IACDnF,EAAAM,EAAAa,cAACsD,EAAA,EAAD,CACE1F,SAAUA,EACV2D,MAAiB,UAAV5D,EAAoBsG,IAAiBC,IAC5CrG,gBAAiBA,EACjBgG,mBAAoBA,GAEnB3H,yICnBT,IAAMiI,EAAU,QAEVC,EAAc,SAAA9C,GAAE,OAAI,SAAA+C,GACxBA,EAAEC,eAEFC,mBAASjD,KAGI,SAASkD,EAAT1H,GAA2C,IAA1BqG,EAA0BrG,EAA1BqG,SAAU7B,EAAgBxE,EAAhBwE,GAAOtE,sIAASC,CAAAH,EAAA,mBAGxD,OAFkBqH,EAAQM,KAAKnD,GAG7BoD,EAAAvF,EAAAa,cAAA,IAAA9C,OAAAE,OAAA,CAAGuH,QAASP,EAAY9C,GAAK7D,KAAM6D,GAAQtE,GACxCmG,GAGHuB,EAAAvF,EAAAa,cAAC4E,EAAA,EAAD1H,OAAAE,OAAA,CAAYkE,GAAIA,GAAQtE,GACrBmG,mECpBQ,SAAS0B,IACtB,OAAO1D,EAAAhC,EAAAa,cAAA,QAAMxC,UAAU,aAAhB,KCgBM,SAASsH,EAAT3C,GAA4C,IAAhB7B,EAAgB6B,EAAhB7B,MAAOyE,EAAS5C,EAAT4C,MAChD,YAAcC,IAAVD,EACK,KAGF5D,EAAAhC,EAAAa,cAAA,SAnBT,SAAoBM,EAAOyE,GACzB,YADqC,IAAZA,MAAQ,IAE/B5D,EAAAhC,EAAAa,cAAAmB,EAAAhC,EAAAiC,SAAA,KACG2D,EAAME,IAAI,SAAAnI,GAAA,IAAGW,EAAHX,EAAGW,KAAMyH,EAATpI,EAASoI,MAAT,OACT/D,EAAAhC,EAAAa,cAACmF,EAAA,SAAD,CAAUC,IAAK3H,GACb0D,EAAAhC,EAAAa,cAACqB,EAAA,EAAD,CAAMC,GAAI7D,GAAOyH,GACjB/D,EAAAhC,EAAAa,cAAC6E,EAAD,SAGHvE,GAUM+E,CAAU/E,EAAOyE,0BCNfO,IAZf,SAAAxI,GAAgD,IAAzBqG,EAAyBrG,EAAzBqG,SAAyBoC,EAAAzI,EAAf0I,YACMC,YAA7BnF,EADsCiF,EACtCjF,MAAOyE,EAD+BQ,EAC/BR,MAEf,OACE5D,EAAAhC,EAAAa,cAACkD,EAAA,EAAD,KACE/B,EAAAhC,EAAAa,cAACI,EAAA,EAAD,CAAKE,MAAOA,IACZa,EAAAhC,EAAAa,cAAC8E,EAAD,CAAiBxE,MAAOA,EAAOyE,MAAOA,IACtC5D,EAAAhC,EAAAa,cAAA,eAAUmD,uCCbhBvE,EAAAK,EAAAC,EAAA,sBAAAd,IAAA,IAAAO,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA+G,EAAA9G,EAAA,KAAA+G,EAAA/G,EAAAE,EAAA4G,GAAAE,EAAAhH,EAAA,KAKe,SAASR,EAATtB,GAMZ,IAAA2G,EAAA3G,EALDZ,YAKC,IAAAuH,EALM,GAKNA,EAAAoC,EAAA/I,EAJDX,eAIC,IAAA0J,EAJS,GAITA,EAAAC,EAAAhJ,EAHDV,gBAGC,IAAA0J,EAHU,GAGVA,EAAAhC,EAAAhH,EAFDa,aAEC,IAAAmG,EAFO,QAEPA,EAAAC,EAAAjH,EADDkH,YACC,IAAAD,EADM,kBAAM,MACZA,EAAAgC,EACuBC,oBAAS,GAA1BC,EADNF,EAAA,GACYG,EADZH,EAAA,GAeD,OAZAI,oBAAU,WACR,IAAMC,EAAWC,YAAY,WAC3BH,EAAQI,QAAQC,SAAWD,QAAQC,OAAOC,UACzC,KAMH,OAJIP,GACFQ,cAAcL,GAGT,kBAAMK,cAAcL,KAC1B,IAEIH,EACLpH,EAAAM,EAAAa,cAAA,OAAKxC,UAAU,cACZwG,IACDnF,EAAAM,EAAAa,cAAC2F,EAAAxG,EAAD,CACEuH,OAAM,GAAKtK,EAAWF,EACtByK,YAAY,KACZhJ,MAAK,aAAeA,KAIxBkB,EAAAM,EAAAa,cAAC4F,EAAA,EAAD,CAAa1J,KAAI,GAAKC,EAAUD,EAAQyB,MAAOA,EAAOqG,KAAMA","file":"component---src-pages-cypress-index-mdx-cea9cfdd57eae11fec96.js","sourcesContent":["const code = `// DON'T DO THIS!\nclass Person {\n  constructor(nameGiven, nameFamily) {\n    this.nameGiven = nameGiven\n    this.nameFamily = nameFamily\n  }\n\n  get fullName () {\n    return \\`\\${this.nameGiven} \\${this.nameFamily}\\`\n  }\n}\n\nclass Employee extends Person {\n  constructor(nameGiven, nameFamily, id) {\n    super(nameGiven, nameFamily)\n    \n    this.id = id\n  }\n  \n  toString () {\n    return \\`My name is \\${this.fullName} and my employee ID is \\${this.id}.\\`\n  }\n}\n\nconst employee = new Employee('Lucy', 'Fur', 666)\n\n// Note that \\`fullName\\` works even though it is in Person, not Employee\nconsole.log(\\`employee.fullName: \\${employee.fullName}\\`)\nconsole.log(\\`employee.toString(): \\${employee.toString()}\\`)\nconsole.log('employee:', employee)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// Person factory\nconst createPerson = (nameGiven, nameFamily) => ({ nameGiven, nameFamily })\n\n// Employee factory (by aggregation)\nconst createEmployeeByAggregation = (id, person) => ({\n  id,\n  person\n})\n\n// New Person: Jane\nconst jane = createPerson('Jane', 'Dobbs')\n\n// Make Jane employee #1\nconst employee = createEmployeeByAggregation(1, jane)\n\nconsole.log('employee:', employee)\nconsole.log(\\`employee.id: \\${employee.id}\\`)\n\n// To access the properties of the Person we have to reach into employee.person:\nconsole.log(\\`employee.person.nameGiven: \\${employee.person.nameGiven}\\`)\nconsole.log(\\`employee.person.nameFamily: \\${employee.person.nameFamily}\\`)\nconsole.log(\\`employee.person.nickname: \\${employee.person.nickname}\\`)\n\nconsole.log(\\`Set jane.nickname to 'Mom'\\`)\njane.nickname = 'Mom'\n\n// We can see the new nickname property because our Employee\n// simply points to the Person object\nconsole.log(\\`employee.person.nickname: \\${employee.person.nickname}\\`)\n\n// We can also extract the Person object from the Employee\nconsole.log('Here is our employee.person:', employee.person)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// Person factory\nconst createPerson = (nameGiven, nameFamily) => ({ nameGiven, nameFamily })\n\n// Employee factory (by concatenation)\nconst createEmployeeByConcatenation = (id, person) => ({\n  id,\n  ...person\n})\n\n// New Person: Marsh\nconst marsh = createPerson('Marsh', 'Dobbs')\n\n// Make Marsh employee #3\nconst employee = createEmployeeByConcatenation(3, marsh)\n\n// We've copied all the properties into a new object so all are visible\nconsole.log('employee:', employee)\nconsole.log(\\`employee.id: \\${employee.id}\\`)\nconsole.log(\\`employee.nameGiven: \\${employee.nameGiven}\\`)\nconsole.log(\\`employee.nameFamily: \\${employee.nameFamily}\\`)\nconsole.log(\\`employee.nickname: \\${employee.nickname}\\`)\n\n// However, we are no longer connected to our Person (marsh)\n// so when we update \\`marsh\\`, we do not update \\`employee\\`\nconsole.log(\\`Set marsh.nickname to 'Connie'\\`)\nmarsh.nickname = 'Connie'\n\n// That said, if we are maintaining immutability, then we will\n// never update the Person, so this won't matter\nconsole.log(\\`employee.nickname: \\${employee.nickname}\\`, '')`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// Person factory\nconst createPerson = (nameGiven, nameFamily) => ({ nameGiven, nameFamily })\n\n// Employee factory (by delegation)\nconst createEmployeeByDelegation = (id, person) => Object.assign(\n  Object.create(person),\n  { id }\n)\n\n// New Person: J.R.\nconst jr = createPerson('J.R.', 'Dobbs')\n\n// Make J.R. employee #2\nconst employee = createEmployeeByDelegation(2, jr)\n\n// Person properties remain in the Person (jr) and\n// are not visible in the Employee object\nconsole.log('employee:', employee)\nconsole.log(\\`employee.id: \\${employee.id}\\`)\n\n// But we can still reference the Person properties\n// as if they were part of the Employee object\nconsole.log(\\`employee.nameGiven: \\${employee.nameGiven}\\`)\nconsole.log(\\`employee.nameFamily: \\${employee.nameFamily}\\`)\nconsole.log(\\`employee.nickname: \\${employee.nickname}\\`)\n\n// And when we update the Person, the Employee properties reflect this\nconsole.log(\\`Set jr.nickname to 'Bob'\\`)\njr.nickname = 'Bob'\n\nconsole.log(\\`employee.nickname: \\${employee.nickname}\\`)\n\n// Where is the person? In the prototype:\nconsole.log('Object.getPrototypeOf(employee):', Object.getPrototypeOf(employee))\nconsole.log(\\`Same person? \\${Object.is(Object.getPrototypeOf(employee), jr)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// Person factory\nconst createPerson = (nameGiven, nameFamily) => ({ nameGiven, nameFamily })\n\n// Employee factory (by concatenation)\nconst createEmployee = (id, person) => ({\n  id,\n  ...person\n})\n\n// Our fullName utility function is effectively polymorphic\n// It will work with *any* object that has nameGiven and nameFamily properties\nconst fullName = ({ nameGiven, nameFamily }) => (\\`\\${nameGiven} \\${nameFamily}\\`)\n\n// New Person: Marsh\nconst marsh = createPerson('Marsh', 'Dobbs')\n\n// Make Marsh employee #3\nconst employee = createEmployee(3, marsh)\n\n// We've copied all the properties into a new object so all are visible\nconsole.log('marsh:', marsh)\nconsole.log(\\`fullName(marsh): \\${fullName(marsh)}\\`)\nconsole.log('employee:', employee)\nconsole.log(\\`employee.id: \\${employee.id}\\`)\nconsole.log(\\`fullName(employee): \\${fullName(employee)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/754368/Workspace/fp-tutorials/fp/src/components/PageLayout/index.js\";\nimport CodeBlock from '../../components/CodeBlock';\nimport Highlighter from '../../components/Highlighter';\nimport Link from '../../components/Link';\nimport badInheritanceSource from '../../runkits/cypress/bad-inheritance';\nimport compositionByAggregationSource from '../../runkits/cypress/composition-by-aggregation';\nimport compositionByConcatenationSource from '../../runkits/cypress/composition-by-concatenation';\nimport compositionByDelegationSource from '../../runkits/cypress/composition-by-delegation';\nimport utilityFunctionsSource from '../../runkits/cypress/utility-functions';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <ul>\n  <li>\n    No more Page Objects\n  </li>\n  <li>\n    Enter Page Modules\n  </li>\n  <li>\n    But what about inheritance?\n  </li>\n  <li>\n    Favour composition over inheritance\n  </li>\n  <li>\n    Readability\n  </li>\n  <li>\n    I need more convincing...\n  </li>\n  <li>\n    Page Objects break the Single Responsibility Principle\n  </li>\n    </ul>\n    <h3 id='no-more-page-objects'>No more Page Objects</h3>\n    <p>{`The `}<strong parentName=\"p\">{`Page Object`}</strong>{` design pattern offers two benefits:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`It keeps all page element selectors in one place; thus, it provides separation of test code from the locators of the application under test (AUT).`}</li>\n      <li parentName=\"ol\">{`It standardises how tests interact with the page; thus, it avoids duplication of code and eases code maintenance.`}</li>\n    </ol>\n    <p>{`Object-orientation (OO) in JavaScript is a bit awkward. Introduction of the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`class`}</code>{` keyword in JavaScript 2015 helped, but classes, and specifically the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`this`}</code>{` keyword, still surprise people Java programmers because they work very differently.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://kentcdodds.com/blog/classes-complexity-and-functional-programming\"\n      }}>{`Here is a great blog from Kent C. Dodds which highlights this point`}</a>{`.`}</p>\n    <h3 id='enter-page-modules'>Enter Page Modules</h3>\n    <p>{`In Java land, it's pretty common to find Page Objects which inherit from the Base Page. In JavaScript, that might look like this:`}</p>\n    <Highlighter code={`import { HomePage } from './BasePage'\\n\nclass HomePage extends BasePage  {\n  constructor() {\n    super();\n    this.mainElement = 'body > .banner';\n  }\n  //... More code\\n\n  export const mainPage = new MainPage();\n}`} theme='dark' mdxType=\"Highlighter\" />\n    <p><em parentName=\"p\">{`With the move to functional programming, we are going to loose not only `}<strong parentName=\"em\">{`inheritance`}</strong>{`, but the `}<code parentName=\"em\" {...{\n          \"className\": \"language-text\"\n        }}>{`class`}</code>{` itself.`}</em>{` Therefore, we need to use `}<strong parentName=\"p\">{`modules`}</strong>{` to arrange our code. Each module exports public functions that can be imported into other modules and used:`}</p>\n    <Highlighter code={`// In the HomePage module (HomePage.js or HomePage/index.js)\nexport function login (email, password) {\n  //...\n}\\n\nexport function logout () {\n  //...\n}\\n\nexport function search (criterion) {\n  // ...\n}`} mdxType=\"Highlighter\" />\n    <p>{`This module can then be imported into your tests or other modules and used as below:`}</p>\n    <Highlighter code={`// In the HomePageTest module (HomePageTest.js or HomePageTest/index.js)\nimport * as homePage from './HomePage.js'\\n\ndescribe('Home Page', () => {\n  it('User can login', () => {\n      cy.visit('/')\n      homePage.login('prateek', '123456')\n  })\n})`} mdxType=\"Highlighter\" />\n    <p>{`or we can import individual functions from a module selectively:`}</p>\n    <Highlighter code={`import { login } from './HomePage.js'\\n\ndescribe('Home Page', () => {\n  it('User can login', () => {\n    cy.visit('/')\n    login('prateek', '123456')\n  })\n})`} mdxType=\"Highlighter\" />\n    <p>{`In general, import only the functions you need when possible.`}</p>\n    <h3 id='but-what-about-inheritance'>But what about inheritance?</h3>\n    <Highlighter code={`public class HomePage extends BasePage { ... } // Java`} language='java' showLineNumbers={false} mdxType=\"Highlighter\" />\n    <p>{`Often we come across test suites where Page Objects extend a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`BasePage`}</code>{` or every test file extends a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`BaseTest`}</code>{` class.`}</p>\n    <p>{`The intention behind this is typically code reuse. Most often the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`BaseTest`}</code>{` class has methods related to login, logout, logging, etc.`}</p>\n    <p><strong parentName=\"p\">{`Please don't do that.`}</strong>{` Bundling `}<em parentName=\"p\">{`unrelated functionality`}</em>{` into a parent class for the purpose of reuse is an abuse of inheritance.`}</p>\n    <p>{`Common functionality required by `}<strong parentName=\"p\">{`specs`}</strong>{` can be added as Cypress `}<strong parentName=\"p\">{`custom commands`}</strong>{`. Custom commands are available to be used globally with the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`cy.`}</code>{` prefix. For example, we can add a method called `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`login`}</code>{` using a custom command:`}</p>\n    <Highlighter code={`Cypress.Commands.add('login', (username, password) => {\n    cy.get('#username').type(username)\n    //...\n})`} mdxType=\"Highlighter\" />\n    <p>{`The `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Cypress.Commands.add`}</code>{` function takes the `}<em parentName=\"p\">{`name`}</em>{` of the custom command as the first argument, and a `}<em parentName=\"p\">{`function`}</em>{` as the second argument.`}</p>\n    <p>{`Now we can use that name to call the custom command in any spec:`}</p>\n    <Highlighter code={`describe('Login Page', () => {\n  it('User can login', () => {\n    cy.login('prateek', '123456')\n    // ...\n  })\n})`} mdxType=\"Highlighter\" />\n    <p>{`Note: functionality that is shared between a few specs `}<em parentName=\"p\">{`but not all`}</em>{` should be added to `}<strong parentName=\"p\">{`utility modules`}</strong>{` instead of adding a custom command. Reserve custom commands for widely-used functionality. `}</p>\n    <h3 id='favour-composition-over-inheritance'>&ldquo;Favour composition over inheritance&rdquo;</h3>\n    <p>{`Why? Watch this video to find out:`}</p>\n    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wfMtDGfHWpA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n    <p>{`Now, consider the code below that uses `}<strong parentName=\"p\">{`inheritance`}</strong>{` (don't do this):`}</p>\n    <CodeBlock {...badInheritanceSource} theme='dark' mdxType=\"CodeBlock\" />\n    <p>{`Inheritance is actually a form of `}{`“`}{`object composition`}{`”`}{`. It is the form that binds the objects most tightly, hence it is the one to be most avoided, if possible.`}</p>\n    <p>{`Here we are using inheritance to provide for code reuse. There is no separate `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` object to which `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` refers. `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` simply inherits the properties (and methods, if any) of the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` object, so, for example, the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`fullName`}</code>{` getter is available both within `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` (as in the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`toString`}</code>{` method) and on instances of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{`.`}</p>\n    <p>{`The same functionality could be achieved using `}<strong parentName=\"p\">{`composition`}</strong>{`. There are three common ways to compose objects in JavaScript: aggregation, delegation, and concatenation.`}</p>\n    <p><strong parentName=\"p\">{`Aggregation`}</strong>{` preserves the objects that we're composing (aggregating). Here, an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` is simply a wrapper around a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` that adds an employee `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`id`}</code>{` property. A key feature of aggregation is that the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` object retains its integrity and we can extract it from the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` object:`}</p>\n    <CodeBlock {...compositionByAggregationSource} mdxType=\"CodeBlock\" />\n    <p><strong parentName=\"p\">{`Delegation`}</strong>{` is similar, except we do not inject the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` into the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{`, so the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` is not directly visible in the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` and we can't extract the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` back out again as easily.`}</p>\n    <p>{`However, the properties of the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` are directly accessible from within the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{`, and if we mutate the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` (which we won't, right?), then those changes are immediately visible in the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` that delegates to that person.`}</p>\n    <p>{`To pull the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` back out, we've got to get it from the prototype: `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Object.getPrototypeOf(employee)`}</code>{`.`}</p>\n    <p>{`Delegation can be used to save memory, while making the properties of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` `}<em parentName=\"p\">{`directly`}</em>{` accessible from within `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Employee`}</code>{` (i.e., we don't have to go through the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`person`}</code>{` property):`}</p>\n    <CodeBlock {...compositionByDelegationSource} mdxType=\"CodeBlock\" />\n    <p><strong parentName=\"p\">{`Concatenation`}</strong>{` is the simplest and often the best for our purposes as we always make copies rather than mutating in place. If we are never going to mutate the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` object once we've created it, then why bother linking to it? This is the loosest form of coupling, and should be the first one to which we turn.`}</p>\n    <p>{`Concatenation simply creates a new object, copying the properties from all objects passed:`}</p>\n    <CodeBlock {...compositionByConcatenationSource} mdxType=\"CodeBlock\" />\n    <p>{`Note: Functions which return objects are called `}<strong parentName=\"p\">{`factory functions`}</strong>{`.`}</p>\n    <p>{`In our inheritance example above, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` provided a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`fullName`}</code>{` getter`}{`—`}{`a computed property. The functional way to do this is with a utility function. We could put all our functions used for `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` in a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` module rather than a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Person`}</code>{` class. Then we import that module`}{`—`}{`or just the functions we need`}{`—`}{`and use them.`}</p>\n    <CodeBlock {...utilityFunctionsSource} mdxType=\"CodeBlock\" />\n    <h3 id='readability'>Readability</h3>\n    <p>{`The reason many people give for using Page Objects is that they encapsulate the complexity of the UI and the locators, which helps with reusability and making the tests more readable. But what is the tradeoff? (There is `}<em parentName=\"p\">{`always`}</em>{` a tradeoff.) And is there a better way?`}</p>\n    <p>{`Note: For these examples I am using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cypress-io/cypress-example-todomvc\"\n      }}>{`Cypress TodoMVC Example Repo`}</a>{` and refactoring a few tests.`}</p>\n    <p>{`Consider this typical Cypress example:`}</p>\n    <Highlighter code={`describe('Todo Application', () => {\n  it('Can add a new Todo', () => {\n    cy.get('.new-todo')    // What am I getting here? It's not clear\n      .type('First Todo')  // Entering text, so maybe some type of input?\n      .type('{enter}')     // Hitting enter, so maybe submitting a form?\\n\n    cy.get('.todo-list li')            // Some list element\n      .eq(0)                           // Not even sure what this is\n      .find('label')                    // Has a label element\n      .should('contain', 'First Todo') // That should contain this text. Who cares?\n  })\n})`} theme='dark' mdxType=\"Highlighter\" />\n    <p>{`As you can see, while the `}<em parentName=\"p\">{`action`}</em>{` we're undertaking`}{`—`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`get`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`type`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`eq`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`find`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`should`}</code>{`—`}{`is obvious, what we're actually trying to accomplish is `}<strong parentName=\"p\">{`not clear at all.`}</strong>{`.`}</p>\n    <p>{`Contrast that with this equivalent example:`}</p>\n    <Highlighter code={`import { addTodo, getTodoLabel, getTopTodoFromList } from './TodoUtil'\\n\nconst TODO_LABEL = 'My Todo'\\n\ndescribe('Todo Application', () => {\n  it('Can add a new Todo', () =>\n    addTodo(TODO_LABEL)\n      .then(getTopTodoFromList)\n      .then(getTodoLabel)\n      .should('equal', TODO_LABEL)\n  )\n})`} mdxType=\"Highlighter\" />\n    <p>{`The first example is `}<strong parentName=\"p\">{`imperative`}</strong>{`. It tells Cypress `}<strong parentName=\"p\">{`how`}</strong>{` to execute the test. Our second, better example is `}<strong parentName=\"p\">{`declarative`}</strong>{`. We have abstracted away the `}{`“`}{`how`}{`”`}{` and we simply concern ourselves with `}<strong parentName=\"p\">{`what`}</strong>{` to do.`}</p>\n    <p>{`Our declarative second example is far more readable, which means much lower cognitive load for the reader: we can understand it at a glance. Even non-technical personnel, such as your business analyst or product owner, can read and understand this test easily. Note also that we no longer need comments to explain what we're doing.`}</p>\n    <p><strong parentName=\"p\">{`And we get the added benefit of the reusability of the utility functions `}<code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`addTodo`}</code>{`, `}<code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`getTopTodoFromList`}</code>{`, and `}<code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`getTodoLabel`}</code>{`.`}</strong></p>\n    <p>{`So where can we find our `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`addTodo`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getTopTodoFromList`}</code>{`, and `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getTodoLabel`}</code>{` functions? They're nicely tucked away in our `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`TodoUtil.js`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`TodoUtil/index.js`}</code>{` file:`}</p>\n    <Highlighter code={`// TodoUtil.js\nexport const addTodo = name =>\n  cy\n    .get('.new-todo')\n    .type(\\`\\${name}{enter}\\`)\\n\nexport const getTopTodoFromList = () =>\n  cy\n    .get('.todo-list')\n    .eq(0)\\n\nexport const getTodoLabel = todo =>\n  todo\n    .find('label')\n    .text()`} mdxType=\"Highlighter\" />\n    <p>{`This is where we hide the imperative code. At some low level, we will always need to tell the computer `}<strong parentName=\"p\">{`how`}</strong>{` to do things. But if we abstract this code into library or utility functions with `}<strong parentName=\"p\">{`concise, clear names`}</strong>{`, then our actual code is as easy to read as plain English. That is a major benefit of working in a `}<strong parentName=\"p\">{`declarative`}</strong>{` style.`}</p>\n    <p>{`Now let's look at an update scenario.`}</p>\n    <Highlighter code={`import {addTodo, getTodoLabel, updateTodo} from './TodoUtil'\\n\ndescribe('Todo Application', ()=> {\n  const INITIAL_TODO = 'Initial todo'\n  const UPDATED_TODO = 'Updated todo'\\n\n  it('Can update a newly created todo', () =>\n    addTodo(INITIAL_TODO)\n      .then(updateTodo(UPDATED_TODO)) // updateTodo(UPDATED_TODO) is partially applied\n      .then(getTodoLabel)\n      .should('equal', UPDATED_TODO)\n  )\n})`} mdxType=\"Highlighter\" />\n    <p>{`And here is the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`updateTodo`}</code>{` utility function:`}</p>\n    <Highlighter code={`// In TodoUtils.js or TodoUtils/index.js\n// Calling this with the updatedLabel returns a FUNCTION\n// that takes the todo and updates it\nexport const updateTodo = updatedLabel =>\n  $todo => { // dollar sign indicates this is an element\n    cy\n      .wrap($todo) // wrap the element to give it Cypress superpowers\n      .within(     // scopes all subsequent commands to the $todo element\n        () => {    // callback function\n          cy\n            .get('label')     // grabs the label\n            .dblclick()       // double-clicks to open the editor\\n\n          cy\n            .get('.edit')                   // grabs the editor input\n            .clear()                        // clears it\n            .type(\\`\\${updatedLabel}{enter}\\`) // enters updated label and submits\n        }\n      )\\n\n    return cy.wrap($todo) // return the wrapped todo element so we can chain \\`thens\\`\n  }`} mdxType=\"Highlighter\" />\n    <p>{`See how we've hidden the nasty imperative code in our utilities? That allows us to keep our actual test code clean, simple, and easy to understand.`}</p>\n    <h3 id='i-need-more-convincing'>I need more convincing...</h3>\n    <p>{`OK. Here are three strong arguments `}<em parentName=\"p\">{`against`}</em>{` Page Objects:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Page Objects introduce state `}<em parentName=\"li\">{`in addition to`}</em>{` the application state, which makes tests harder to understand.`}</li>\n      <li parentName=\"ol\">{`Using Page Objects means that all our tests go through the application's GUI.`}</li>\n      <li parentName=\"ol\">{`Page Objects try to fit multiple cases into a uniform interface, falling back to conditional logic`}{`—`}{`and that's just not nice.`}</li>\n    </ol>\n    <p>{`Most of us who swear by Page Objects are coming from Java and Selenium, so it's worth noting that...`}</p>\n    <p><strong parentName=\"p\">{`JavaScript is NOT Java`}</strong>{`.`}</p>\n    <p>{`Java is a statically-typed, compiled, `}<em parentName=\"p\">{`strongly`}</em>{` object-oriented language (although it is becoming more functional with each new version). JavaScript is a `}<strong parentName=\"p\">{`dynamically-typed, interpreted, hybrid OOP/FP language`}</strong>{` that also gets more functional with each new version (and versions come annually).`}</p>\n    <p>{`New language `}{`→`}{` new paradigm `}{`→`}{` `}<em parentName=\"p\">{`new way of doing things`}</em>{`.`}</p>\n    <p>{`But even in an OO paradigm, Page Objects leave a lot to be desired. For example:`}</p>\n    <h3 id='pos-break-the-srp'>Page Objects break the Single Responsibility Principle</h3>\n    <p>{`Page Objects bind unrelated functionality together in one class. For example, in the code below, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`searchProduct()`}</code>{` functionality is `}<em parentName=\"p\">{`not related`}</em>{` to the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`login`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`logout`}</code>{` actions.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nfunction SEO ({ lang, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={\n        title\n          ? `${title} | ${site.siteMetadata.title}`\n          : site.siteMetadata.title\n      }\n    >\n      <script src='https://embed.runkit.com' data-element-id='runkit' />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Location } from '@reach/router'\n\nfunction DefaultLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Bottom-up\n      </Link>\n      <Link\n        to='/deductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Top-down\n      </Link>\n      <Link\n        to='/cypress'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Cypress.io\n      </Link>\n    </>\n  )\n}\n\nfunction InductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive/reusability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Reusability\n      </Link>\n      <Link\n        to='/inductive/immutability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Variables\n      </Link>\n      <Link\n        to='/inductive/iteration'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Looping\n      </Link>\n      <Link\n        to='/inductive/composition'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pipelines\n      </Link>\n    </>\n  )\n}\n\nfunction DeductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/deductive/pure-functions/'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pure functions\n      </Link>\n      <Link\n        to='/deductive/more-fp-concepts'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        More FP concepts\n      </Link>\n    </>\n  )\n}\n\nfunction NavLinks ({ location }) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return <InductiveLinks />\n    case 'deductive':\n      return <DeductiveLinks />\n    default:\n      return <DefaultLinks />\n  }\n}\n\nfunction getColour (location) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return 'ForestGreen'\n    case 'deductive':\n      return 'MediumBlue'\n    case 'cypress':\n      return 'Maroon'\n    default:\n      return 'RebeccaPurple'\n  }\n}\n\nconst Header = ({ siteTitle, location }) => {\n  const backgroundColour = getColour(location)\n\n  return (\n    <header\n      style={{\n        background: backgroundColour,\n        marginBottom: `1.45rem`\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `1.45rem 1.0875rem`\n        }}\n      >\n        <h1 style={{ margin: 0, display: 'inline-block', flexGrow: 1 }}>\n          <Link\n            to='/'\n            style={{\n              color: `white`,\n              textDecoration: `none`\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <div style={{ flexShrink: 1 }}>\n          <NavLinks location={location} />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default function HeaderWrapper (props) {\n  return (\n    <Location>\n      {locationProps => <Header {...locationProps} {...props} />}\n    </Location>\n  )\n}\n","import './index.css'\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {\n  solarizedDark,\n  solarizedLight\n} from 'react-syntax-highlighter/dist/esm/styles/hljs'\n\nexport default function Highlighter ({\n  code = '',\n  language = 'javascript',\n  showLineNumbers = true,\n  startingLineNumber = 1,\n  theme = 'light',\n  warn = () => null\n}) {\n  return (\n    <>\n      {warn()}\n      <SyntaxHighlighter\n        language={language}\n        style={theme === 'light' ? solarizedLight : solarizedDark}\n        showLineNumbers={showLineNumbers}\n        startingLineNumber={startingLineNumber}\n      >\n        {code}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n","import { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nimport { navigate } from '@reach/router'\n\nconst pattern = /#|\\?/g\n\nconst makeOnClick = to => e => {\n  e.preventDefault\n\n  navigate(to)\n}\n\nexport default function Link ({ children, to, ...props }) {\n  const useAnchor = pattern.test(to)\n\n  return useAnchor ? (\n    <a onClick={makeOnClick(to)} href={to} {...props}>\n      {children}\n    </a>\n  ) : (\n    <GatsbyLink to={to} {...props}>\n      {children}\n    </GatsbyLink>\n  )\n}\n","import React from 'react'\n\nexport default function TrailSeparator () {\n  return <span className='separator'>&raquo;</span>\n}\n","import { Link } from 'gatsby'\nimport React, { Fragment } from 'react'\n\nimport TrailSeparator from '../TrailSeparator'\n\nfunction getCrumbs (title, trail = []) {\n  return (\n    <>\n      {trail.map(({ href, label }) => (\n        <Fragment key={href}>\n          <Link to={href}>{label}</Link>\n          <TrailSeparator />\n        </Fragment>\n      ))}\n      {title}\n    </>\n  )\n}\n\nexport default function BreadcrumbTrail ({ title, trail }) {\n  if (trail === undefined) {\n    return null\n  }\n\n  return <p>{getCrumbs(title, trail)}</p>\n}\n","import React from 'react'\n\nimport BreadcrumbTrail from '../BreadcrumbTrail'\nimport Layout from '../Layout'\nimport SEO from '../SEO'\n\nfunction PageLayout ({ children, pageContext }) {\n  const { title, trail } = pageContext.frontmatter\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <BreadcrumbTrail title={title} trail={trail} />\n      <article>{children}</article>\n    </Layout>\n  )\n}\n\nexport default PageLayout\n","import React, { useEffect, useState } from 'react'\nimport Embed from 'react-runkit'\n\nimport Highlighter from '../Highlighter'\n\nexport default function CodeBlock ({\n  code = '',\n  imports = '',\n  requires = '',\n  theme = 'light',\n  warn = () => null\n}) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShow(Boolean(window) && Boolean(window.RunKit))\n    }, 1000)\n\n    if (show) {\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return show ? (\n    <div className='code-block'>\n      {warn()}\n      <Embed\n        source={`${requires}${code}`}\n        nodeVersion='12'\n        theme={`solarized-${theme}`}\n      />\n    </div>\n  ) : (\n    <Highlighter code={`${imports}${code}`} theme={theme} warn={warn} />\n  )\n}\n"],"sourceRoot":""}