{"version":3,"sources":["webpack:///./src/runkits/deductive/best-curry.js","webpack:///./src/runkits/deductive/compose.js","webpack:///./src/runkits/deductive/curry.js","webpack:///./src/runkits/deductive/declarative.js","webpack:///./src/runkits/deductive/higher-order-function.js","webpack:///./src/runkits/deductive/imperative.js","webpack:///./src/runkits/deductive/our-curry.js","webpack:///./src/runkits/deductive/ramda-map.js","webpack:///./src/runkits/deductive/simple-curry.js","webpack:///./src/pages/deductive/more-fp-concepts/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/TrailSeparator/index.js","webpack:///./src/components/BreadcrumbTrail/index.js","webpack:///./src/components/PageLayout/index.js","webpack:///./src/components/Highlighter/index.js","webpack:///./src/components/CodeBlock/index.js","webpack:///./src/components/OffsiteLink/index.js"],"names":["best_curry","code","imports","requires","compose","curry","declarative","higher_order_function","imperative","our_curry","ramda_map","simple_curry","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","index_es","assign","mdxType","Link","to","aria-label","id","parentName","CodeBlock","higherOrderFunctionSource","OffsiteLink","href","ramdaMapSource","imperativeSource","theme","declarativeSource","Highlighter","composeSource","simpleCurrySource","currySource","bestCurrySource","ourCurrySource","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","SEO","lang","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","siteMetadata","src","data-element-id","defaultProps","meta","description","DefaultLinks","react_default","Fragment","gatsby_browser_entry","style","color","textDecoration","textTransform","display","padding","InductiveLinks","DeductiveLinks","NavLinks","pathname","split","Header","_ref2","siteTitle","backgroundColour","getColour","background","marginBottom","alignItems","margin","maxWidth","flexGrow","flexShrink","HeaderWrapper","es","locationProps","Header_Header","Layout","children","_856328897","paddingTop","pattern","makeOnClick","navigate","test","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","gatsby__WEBPACK_IMPORTED_MODULE_5__","TrailSeparator","className","BreadcrumbTrail","trail","undefined","map","label","react","key","getCrumbs","PageLayout","_pageContext$frontmat","pageContext","frontmatter","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_1__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_2__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_3__","_ref$code","_ref$language","language","_ref$showLineNumbers","showLineNumbers","_ref$startingLineNumb","startingLineNumber","_ref$theme","_ref$warn","warn","solarizedLight","solarizedDark","react_runkit__WEBPACK_IMPORTED_MODULE_1__","react_runkit__WEBPACK_IMPORTED_MODULE_1___default","_Highlighter__WEBPACK_IMPORTED_MODULE_2__","_ref$imports","_ref$requires","_useState","useState","show","setShow","useEffect","interval","setInterval","Boolean","window","RunKit","clearInterval","source","nodeVersion","target","rel"],"mappings":"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","file":"component---src-pages-deductive-more-fp-concepts-index-mdx-b11b942cc86c284a3ba9.js","sourcesContent":["const code = `const { curry } = require('ramda')\n\nconst fetchData = curry((method, url, data) => {\n  console.log(\\`Sending a \\${method} request to \\${url} with query \\${data}.\\`)\n})\n\nconst postRequest = fetchData('POST')\nconst postUser = postRequest('/users')\nconst postPet = postRequest('/pets')\n\npostUser(JSON.stringify({ nameGiven: 'Bob', nameFamily: 'Dobbs' }))\npostUser(JSON.stringify({ nameGiven: 'Bob', nameFamily: 'Dole' }))\n\npostPet(JSON.stringify({ name: 'Bob', species: 'dog' }))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { add, compose, negate, pipe, sum } = require('ramda')\n\n// compose applies the functions from  right to left\nconst compute = compose(\n  negate,   // 3. Negate (= -25)\n  add(10),  // 2. Add 10 (= 25)\n  sum       // 1. Sum 1-5 (= 15)\n)\n\nconsole.log('Right to left', compute([1, 2, 3, 4, 5])) // -25\n\n// pipe applies the functions from left to right\nconst computeAgain = pipe(\n  sum,      // 1. Sum 1-5 (= 15)\n  add(10),  // 2. Add 10 (= 25)\n  negate    // 3. Negate (= -25)\n)\n\nconsole.log('Left to right', computeAgain([1, 2, 3, 4, 5]))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { curry } = require('ramda')\n\nconst addEmUp = curry((x, y, z) => x + y + z)\n\nconsole.log('addEmUp(1, 2, 3) is:', addEmUp(1, 2, 3))\nconsole.log('addEmUp(1)(2, 3) is:', addEmUp(1)(2, 3))\nconsole.log('addEmUp(1, 2)(3) is:', addEmUp(1, 2)(3))\nconsole.log('addEmUp(1)(2)(3) is:', addEmUp(1)(2)(3))\n\nconst addOne = addEmUp(1)\nconst addOneAndTwo = addOne(2)\n\nconsole.log('addOneAndTwo(3) is:', addOneAndTwo(3))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// This is a much better way to code\nconst { map } = require('ramda')\n\nconst nums = [1, 2, 3, 4, 5]\nconst square = x => x * x\n\nlet out = map(square, nums) // It's almost plain English\n\nconsole.log('by function', out)\n\n// Or, using the Array.map method (still better than a loop)\nconsole.log('by method', nums.map(square))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const add = (x, y) => x + y\nconst subtract = (x, y) => x - y\nconst evaluate = (f, x, y) => f(x, y)\n\n// evaluate is a function promoting reuse\nconsole.log(\\`evaluate(add, 3, 2) yields \\${evaluate(add, 3, 2)}\\`)\nconsole.log(\\`evaluate(subtract, 3, 2) yields \\${evaluate(subtract, 3, 2)}\\`)\n\n// A real world vanilla JS example\n// Array.sort takes a comparator function that takes 2 parameters and returns:\n//   * a negative number if the second goes before the first\n//   * zero if they are the same\n//   * a positive number if the first goes before the second\nconsole.log('Ascending sort', [3, 7, 1, 9, 4].sort((a, b) => a - b))\nconsole.log('Descending sort', [3, 7, 1, 9, 4].sort((a, b) => b - a))\n\n// We can do more than that: how about sorting strings by length\n// rather than alphabetically?\nconsole.log(\n  'By length',\n  ['red', 'green', 'blue'].sort((a, b) => a.length - b.length)\n)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// This is not a good way to do things\nconst nums = [1, 2, 3, 4, 5]\nconst square = x => x * x\n\nlet out = []\n\nfor (let i = 0; i < nums.length; i++) {\n  out[i] = square(nums[i])\n}\n\nconsole.log('by for loop', out)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// curryN takes the number of parameters and the function\nconst curryN = (n, f) => (...args) => // return a function that takes some arguments\n  args.length === n  // if all the arguments have been supplied\n    ? f(...args)     // then call the function with the args and return the result\n    : curryN(\n      n - args.length,\n      (...newArgs) => f(...args, ...newArgs)\n    )                // else recurse for the remaining arguments\n\nconst curry = f => curryN(f.length, f) // Create a closure on the number of parameters\n  \n// A function that takes 3 parameters\nconst uncurried = (x, y, z) => ([x, y, z])\n\n// Try applying it without currying\nconsole.log(\\`uncurried(1, 2, 3) is \\${JSON.stringify(uncurried(1, 2, 3))}\\`)\n\n// Oops\ntry {\n  console.log(\\`uncurried(1, 2)(3) is \\${JSON.stringify(uncurried(1, 2)(3))}\\`)\n  console.log(\\`uncurried(1)(2, 3) is \\${JSON.stringify(uncurried(1)(2, 3))}\\`)\n  console.log(\\`uncurried(1)(2)(3) is \\${JSON.stringify(uncurried(1)(2)(3))}\\`)\n} catch (e) {\n  console.log(\\`Uh, oh: \\${e}\\`)\n}\n\n// Now let's try again, but with our function curried properly\nconst curried = curry((x, y, z) => ([x, y, z]))\n\n// Everything works\nconsole.log(\\`curried(4, 5, 6) is \\${JSON.stringify(curried(4, 5, 6))}\\`)\nconsole.log(\\`curried(4, 5)(6) is \\${JSON.stringify(curried(4, 5)(6))}\\`)\nconsole.log(\\`curried(4)(5, 6) is \\${JSON.stringify(curried(4)(5, 6))}\\`)\nconsole.log(\\`curried(4)(5)(6) is \\${JSON.stringify(curried(4)(5)(6))}\\`)\n\n// We can partially apply our function to create new functions\n// that \"remember\" one or more arguments\nconst prependSeven = curried(7)\nconst prependSevenAndEight = prependSeven(8)\nconsole.log(\\`prependSevenAndEight(9) is \\${JSON.stringify(prependSevenAndEight(9))}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { map } = require('ramda')\n\nconst squares = [1, 4, 9, 16, 25]\n\n// Vanilla JS with the Array.map method\nconsole.log('Array.map', squares.map(Math.sqrt))\n\n// The Ramda map equivalent\nconsole.log('Ramda map', map(Math.sqrt, squares))\n\n// But the Ramda map is curried!\nconst mapSquareRoots = map(Math.sqrt)\n\nconsole.log('[1, 4, 9, 16, 25]', mapSquareRoots([1, 4, 9, 16, 25]))\nconsole.log('[36, 49, 64, 81, 100]', mapSquareRoots([36, 49, 64, 81, 100]))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const add = x => y => x + y\n\n// Now we can partially apply add:\nconst addTen = add(10)\n\n// And then use it\nconsole.log('addTen(15) is:', addTen(15))\n\n// We can still pass both arguments at once, but as two calls:\nconsole.log('add(10)(5) is:', add(10)(5))\n\n// But we can't use the function normally:\nconsole.log('add(10, 5) is:', add(10, 5))`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/754368/Workspace/fp-tutorials/fp/src/components/PageLayout/index.js\";\nimport CodeBlock from '../../../components/CodeBlock';\nimport Highlighter from '../../../components/Highlighter';\nimport Link from '../../../components/Link';\nimport OffsiteLink from '../../../components/OffsiteLink';\nimport bestCurrySource from '../../../runkits/deductive/best-curry';\nimport composeSource from '../../../runkits/deductive/compose';\nimport currySource from '../../../runkits/deductive/curry';\nimport declarativeSource from '../../../runkits/deductive/declarative';\nimport higherOrderFunctionSource from '../../../runkits/deductive/higher-order-function';\nimport imperativeSource from '../../../runkits/deductive/imperative';\nimport ourCurrySource from '../../../runkits/deductive/our-curry';\nimport ramdaMapSource from '../../../runkits/deductive/ramda-map';\nimport simpleCurrySource from '../../../runkits/deductive/simple-curry';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`There's much more to functional programming. We haven't really begun to see the power it brings.`}</p>\n    <p>{`(Following on from `}<Link to='/deductive/pure-functions/' aria-label='Pure functions' mdxType=\"Link\">{`Pure functions`}</Link>{`.)`}</p>\n    <h3 id='higher-order-functions'>Higher-order functions aid reusability</h3>\n    <p>{`JavaScript has `}<strong parentName=\"p\">{`first class functions`}</strong>{`, which allow us to treat functions as data`}{`—`}{`that means that we can assign them to variables, pass them as arguments to other functions, return them from functions, etc.`}</p>\n    <p>{`A `}<strong parentName=\"p\">{`higher-order functions`}</strong>{` is a function that takes one or more functions as parameters, return a function, or both.`}</p>\n    <p>{`Functional programming tends to reuse a common set of functional utilities to process data.`}</p>\n    <CodeBlock {...higherOrderFunctionSource} mdxType=\"CodeBlock\" />\n    <p>{`Object-oriented programming binds functions and data together, so that the functions`}{`—`}{`now called \"methods\"`}{`—`}{`can only operate on the data to which they are attached. For example, in the `}<inlineCode parentName=\"p\">{`Array.sort`}</inlineCode>{` method above, we must start with an array and then do the sort on that array.`}</p>\n    <p>{`Granted, we can operate on any `}<em parentName=\"p\">{`type`}</em>{` of array`}{`—`}{`strings, numbers, objects, even other arrays`}{`—`}{`but because `}<inlineCode parentName=\"p\">{`sort`}</inlineCode>{` is an `}<em parentName=\"p\">{`instance`}</em>{` method, we have to call it directly on the Array we want to sort.`}</p>\n    <p>{`We can also use libraries of true FP functions to do the same thing, but without binding our function to a specific array instance. Compare, for example, the `}<OffsiteLink href='https://ramdajs.com/docs/#map' mdxType=\"OffsiteLink\">{`Ramda`}</OffsiteLink>{` `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{` function to the built-in, vanilla JS `}<inlineCode parentName=\"p\">{`Array.map`}</inlineCode>{` `}<em parentName=\"p\">{`method`}</em>{`.`}</p>\n    <CodeBlock {...ramdaMapSource} mdxType=\"CodeBlock\" />\n    <p>{`As you can see, Ramda's pure `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{` function is more powerful and reusable than even the `}<inlineCode parentName=\"p\">{`Array.map`}</inlineCode>{` method. We'll get to currying and composition more below.`}</p>\n    <h3 id='declarative-vs-imperative'>Declarative vs. imperative style</h3>\n    <p>{`Functional programming is `}<strong parentName=\"p\">{`declarative`}</strong>{`, meaning that the program logic is expressed without explicitly describing the flow control: it tells the code `}<em parentName=\"p\">{`what`}</em>{` to do rather than telling it `}<em parentName=\"p\">{`how`}</em>{` to do it.`}</p>\n    <p><strong parentName=\"p\">{`Imperative`}</strong>{` programs spend lines of code describing the specific steps used to achieve the desired results`}{`—`}{`the flow control: `}<strong parentName=\"p\">{`How`}</strong>{` to do things.`}</p>\n    <p><strong parentName=\"p\">{`Declarative`}</strong>{` programs abstract the flow control process, and instead spend lines of code describing the data flow: `}<strong parentName=\"p\">{`What`}</strong>{` to do.`}</p>\n    <p>{`This means that under the covers, declarative languages are imperative. At some level, the computer only responds to \"how\". But by abstracting the \"how\" into higher-level \"what\", functional programming makes life much easier for the programmer.`}</p>\n    <p>{`Loops are a good example of imperative code. At a quick glance, what does the code below do?`}</p>\n    <CodeBlock {...imperativeSource} theme='dark' mdxType=\"CodeBlock\" />\n    <p>{`Notice how you have to work your way through the `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{` loop syntax. There's a lot going on. Now compare that to the declarative version:`}</p>\n    <CodeBlock {...declarativeSource} mdxType=\"CodeBlock\" />\n    <p><strong parentName=\"p\">{`Imperative`}</strong>{` code frequently utilizes statements. A statement is a piece of code which performs some action. Examples of commonly used statements include `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`if`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`switch`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`throw`}</inlineCode>{`, etc.`}</p>\n    <p><strong parentName=\"p\">{`Declarative`}</strong>{` code relies more on expressions. An expression is a piece of code which evaluates to some value. Expressions are usually some combination of function calls, values, and operators which are evaluated to produce the resulting value. Examples include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`2 * 2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`doubleMap([2, 3, 4])`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Math.max(4, 3, 2)`}</inlineCode></li>\n      <li parentName=\"ul\">{`etc.`}</li>\n    </ul>\n    <h3 id='composition'>Functional composition</h3>\n    <p>{`Function composition is the act of combining multiple functions together in order to create more complex logical flows. `}</p>\n    <p><strong parentName=\"p\">{`The precondition that we need to have in mind is that when we compose functions each one should take the output from the previous.`}</strong></p>\n    <p>{`If we had to add two numbers and then multiply the result of the addition by 10, then we might write something like this:`}</p>\n    <Highlighter code={`const add = (a, b) => a + b\nconst multiplyByTen = x => x * 10\n\\nconst result = multiplyByTen(add(3, 5)) // 10 * (3 + 5)`} mdxType=\"Highlighter\" />\n    <p>{`The code is easy to understand but if we had to perform more operations readability suffers:`}</p>\n    <Highlighter code={`const sum = (a, b) => a + b\nconst square = x => x * x\nconst addTen = x => x + 10\n\\nconst computeNumbers = addTen(square(sum(3, 5))) // 74`} mdxType=\"Highlighter\" />\n    <p>{`We can use `}<OffsiteLink href='https://ramdajs.com/docs/' mdxType=\"OffsiteLink\">{`Ramda`}</OffsiteLink>{` to enable us to easily write functional code:`}</p>\n    <CodeBlock {...composeSource} mdxType=\"CodeBlock\" />\n    <h3 id='currying'>Currying</h3>\n    <p>{`A `}<strong parentName=\"p\">{`curried`}</strong>{` function is a function that permits you to pass one parameter at a time. If you pass fewer arguments than the function expects, then it returns a function that takes the remaining arguments and remembers the arguments already passed.`}</p>\n    <p>{`Essentially, you can \"partially apply\" curried functions, creating  new functions that remember the arguments already passed (called a \"closure\"). You can see this in the composition example above with the `}<inlineCode parentName=\"p\">{`add`}</inlineCode>{` function that takes two parameters, but is partially applied with the first parameter, `}<inlineCode parentName=\"p\">{`add(10)`}</inlineCode>{` to create a new function that will take a single number and add 10 to it.`}</p>\n    <p>{`An easy way to \"curry\" JavaScript functions is by nesting single-parameter functions:`}</p>\n    <CodeBlock {...simpleCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`In the above example, `}<inlineCode parentName=\"p\">{`add(10, 5)`}</inlineCode>{` returned a function because it ignored the second argument, so instead it worked the same as `}<inlineCode parentName=\"p\">{`add(10)`}</inlineCode>{`: we got back a function that remembers the 10 and takes the second parameter.`}</p>\n    <p>{`What we want is a function that let's us apply the arguments in any combination. `}<OffsiteLink href='https://ramdajs.com/docs/#curry' mdxType=\"OffsiteLink\">{`Ramda`}</OffsiteLink>{` provides us with just such a function:`}</p>\n    <CodeBlock {...currySource} mdxType=\"CodeBlock\" />\n    <p>{`Currying shines during refactoring when you create a generalized version of a function with lots of parameters and then use it to create specialized versions with fewer parameters. This way we can write more descriptive code and achieve much better code reusability.`}</p>\n    <CodeBlock {...bestCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`We can easily write our own function to curry functions (as long as they take a fixed number of arguments`}{`—`}{`can you guess why?). So if you're into impressing your friends (or just curious), check out the example below:`}</p>\n    <CodeBlock {...ourCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`Curry FTW.`}</p>\n    <h3 id='things-to-avoid'>More things to avoid</h3>\n    <p>{`A good first step towards writing good Functional code is to stop using the below JS constructs as they break one or more FP principles.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Loops (loops lead to imperative code)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`while`}</li>\n          <li parentName=\"ul\">{`do...while`}</li>\n          <li parentName=\"ul\">{`for`}</li>\n          <li parentName=\"ul\">{`for...of`}</li>\n          <li parentName=\"ul\">{`for...in`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Void functions (a void function returns nothing so is impure)`}</li>\n      <li parentName=\"ul\">{`Variable declarations with `}<inlineCode parentName=\"li\">{`var`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`let`}</inlineCode>{` (permit mutation of state)`}</li>\n      <li parentName=\"ul\">{`Object mutation, for example: `}<inlineCode parentName=\"li\">{`obj.x = 5`}</inlineCode>{` (permit mutation of state)`}</li>\n      <li parentName=\"ul\">{`Array mutator methods (these mutate the Array in place)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`copyWithin`}</li>\n          <li parentName=\"ul\">{`fill`}</li>\n          <li parentName=\"ul\">{`pop`}</li>\n          <li parentName=\"ul\">{`push`}</li>\n          <li parentName=\"ul\">{`reverse`}</li>\n          <li parentName=\"ul\">{`shift`}</li>\n          <li parentName=\"ul\">{`sort`}</li>\n          <li parentName=\"ul\">{`splice`}</li>\n          <li parentName=\"ul\">{`unshift`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Map mutator methods (these mutate the Map in place)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`clear`}</li>\n          <li parentName=\"ul\">{`delete`}</li>\n          <li parentName=\"ul\">{`set`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Set mutator methods (these mutate the Set in place)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`add`}</li>\n          <li parentName=\"ul\">{`clear`}</li>\n          <li parentName=\"ul\">{`delete`}</li>\n        </ul></li>\n    </ul>\n    <small>Errors, bugs, suggestions, questions? Contact <a href='mailto:Prateek_Sharma@bnz.co.nz'>Prateek Sharma</a></small>.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nfunction SEO ({ lang, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={\n        title\n          ? `${title} | ${site.siteMetadata.title}`\n          : site.siteMetadata.title\n      }\n    >\n      <script src='https://embed.runkit.com' data-element-id='runkit' />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Location } from '@reach/router'\n\nfunction DefaultLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Bottom-up\n      </Link>\n      <Link\n        to='/deductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Top-down\n      </Link>\n      <Link\n        to='/patterns-antipatterns'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Patterns\n      </Link>\n    </>\n  )\n}\n\nfunction InductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive/reusability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Reusability\n      </Link>\n      <Link\n        to='/inductive/immutability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Variables\n      </Link>\n      <Link\n        to='/inductive/iteration'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Looping\n      </Link>\n      <Link\n        to='/inductive/composition'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pipelines\n      </Link>\n    </>\n  )\n}\n\nfunction DeductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/deductive/pure-functions/'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pure functions\n      </Link>\n      <Link\n        to='/deductive/more-fp-concepts'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        More FP concepts\n      </Link>\n    </>\n  )\n}\n\nfunction NavLinks ({ location }) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return <InductiveLinks />\n    case 'deductive':\n      return <DeductiveLinks />\n    default:\n      return <DefaultLinks />\n  }\n}\n\nfunction getColour (location) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return 'ForestGreen'\n    case 'deductive':\n      return 'MediumBlue'\n    case 'patterns-antipatterns':\n      return 'Maroon'\n    default:\n      return 'RebeccaPurple'\n  }\n}\n\nconst Header = ({ siteTitle, location }) => {\n  const backgroundColour = getColour(location)\n\n  return (\n    <header\n      style={{\n        background: backgroundColour,\n        marginBottom: `1.45rem`\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `1.45rem 1.0875rem`\n        }}\n      >\n        <h1 style={{ margin: 0, display: 'inline-block', flexGrow: 1 }}>\n          <Link\n            to='/'\n            style={{\n              color: `white`,\n              textDecoration: `none`\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <div style={{ flexShrink: 1 }}>\n          <NavLinks location={location} />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default function HeaderWrapper (props) {\n  return (\n    <Location>\n      {locationProps => <Header {...locationProps} {...props} />}\n    </Location>\n  )\n}\n","import './index.css'\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nimport { navigate } from '@reach/router'\n\nconst pattern = /#|\\?/g\n\nconst makeOnClick = to => () => navigate(to)\n\nexport default function Link ({ children, to, ...props }) {\n  return pattern.test(to) ? (\n    <a onClick={makeOnClick(to)} {...props}>\n      {children}\n    </a>\n  ) : (\n    <GatsbyLink to={to} {...props}>\n      {children}\n    </GatsbyLink>\n  )\n}\n","import React from 'react'\n\nexport default function TrailSeparator () {\n  return <span className='separator'>&raquo;</span>\n}\n","import { Link } from 'gatsby'\nimport React, { Fragment } from 'react'\n\nimport TrailSeparator from '../TrailSeparator'\n\nfunction getCrumbs (title, trail = []) {\n  return (\n    <>\n      {trail.map(({ href, label }) => (\n        <Fragment key={href}>\n          <Link to={href}>{label}</Link>\n          <TrailSeparator />\n        </Fragment>\n      ))}\n      {title}\n    </>\n  )\n}\n\nexport default function BreadcrumbTrail ({ title, trail }) {\n  if (trail === undefined) {\n    return null\n  }\n\n  return <p>{getCrumbs(title, trail)}</p>\n}\n","import React from 'react'\n\nimport BreadcrumbTrail from '../BreadcrumbTrail'\nimport Layout from '../Layout'\nimport SEO from '../SEO'\n\nfunction PageLayout ({ children, pageContext }) {\n  const { title, trail } = pageContext.frontmatter\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <BreadcrumbTrail title={title} trail={trail} />\n      <article>{children}</article>\n    </Layout>\n  )\n}\n\nexport default PageLayout\n","import React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {\n  solarizedDark,\n  solarizedLight\n} from 'react-syntax-highlighter/dist/esm/styles/hljs'\n\nexport default function Highlighter ({\n  code = '',\n  language = 'javascript',\n  showLineNumbers = true,\n  startingLineNumber = 1,\n  theme = 'light',\n  warn = () => null\n}) {\n  return (\n    <>\n      {warn()}\n      <SyntaxHighlighter\n        language={language}\n        style={theme === 'light' ? solarizedLight : solarizedDark}\n        showLineNumbers={showLineNumbers}\n        startingLineNumber={startingLineNumber}\n      >\n        {code}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Embed from 'react-runkit'\n\nimport Highlighter from '../Highlighter'\n\nexport default function CodeBlock ({\n  code = '',\n  imports = '',\n  requires = '',\n  theme = 'light',\n  warn = () => null\n}) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShow(Boolean(window) && Boolean(window.RunKit))\n    }, 1000)\n\n    if (show) {\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return show ? (\n    <div className='code-block'>\n      {warn()}\n      <Embed\n        source={`${requires}${code}`}\n        nodeVersion='12'\n        theme={`solarized-${theme}`}\n      />\n    </div>\n  ) : (\n    <Highlighter code={`${imports}${code}`} theme={theme} warn={warn} />\n  )\n}\n","import React from 'react'\n\nexport default function OffsiteLink ({ children, href }) {\n  return (\n    <a\n      href={href}\n      target='_blank'\n      rel='noopener noreferrer'\n      aria-label='Offsite link: opens in new window'\n      className='offsite-link'\n      title='Offsite link: opens in a new window'\n    >\n      {children}\n    </a>\n  )\n}\n"],"sourceRoot":""}