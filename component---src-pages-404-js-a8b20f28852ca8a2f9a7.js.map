{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","_objectSpread","json","SEO","lang","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","siteMetadata","src","data-element-id","defaultProps","meta","description","Header","siteTitle","react_default","style","background","marginBottom","display","alignItems","margin","maxWidth","padding","flexGrow","gatsby_browser_entry","to","color","textDecoration","flexShrink","textTransform","Layout","children","_856328897","Fragment","components_Header","paddingTop"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,IAAAa,EAAAb,EAAAK,EAAAO,GAAAZ,EAAAc,EAAAZ,EAAA,sBAAAW,EAAAJ,IAAAT,EAAA,KAAAA,EAAA,IAcyBe,QAAOC,QAELC,IAAMC,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,0gBCsBhCK,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEV,IAAMP,cAAckB,+UAApBC,CAAA,CACLH,WACAC,iBACGA,EAAcG,OALV,uFCHX,SAASC,EAATN,GAA+B,IAAfO,EAAeP,EAAfO,KAAMrB,EAASc,EAATd,MACZsB,EADqBC,EAAAC,KACrBF,KAcR,OACEG,EAAA3B,EAAAC,cAAC2B,EAAA5B,EAAD,CACE6B,eAAgB,CACdN,QAEFrB,MACEA,EACOA,EADF,MACasB,EAAKM,aAAa5B,MAChCsB,EAAKM,aAAa5B,OAGxByB,EAAA3B,EAAAC,cAAA,UAAQ8B,IAAI,2BAA2BC,kBAAgB,YAK7DV,EAAIW,aAAe,CACjBV,KAAI,KACJW,KAAM,GACNC,YAAW,IAGEb,8OCrCTc,EAAS,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,UAAH,OACbC,EAAAtC,EAAAC,cAAA,UACEsC,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAAtC,EAAAC,cAAA,OACEsC,MAAO,CACLG,QAAS,OACTC,WAAY,SACZC,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTR,EAAAtC,EAAAC,cAAA,MAAIsC,MAAO,CAAEK,OAAQ,EAAGF,QAAS,eAAgBK,SAAU,IACzDT,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,IACHV,MAAO,CACLW,MAAK,QACLC,eAAc,SAGfd,IAGLC,EAAAtC,EAAAC,cAAA,OAAKsC,MAAO,CAAEa,WAAY,IACxBd,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,eACHV,MAAO,CACLW,MAAK,QACLC,eAAc,OACdE,cAAe,YACfX,QAAS,eACTI,QAAS,aAPb,eAYAR,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,gBACHV,MAAO,CACLW,MAAK,QACLC,eAAc,OACdE,cAAe,YACfX,QAAS,eACTI,QAAS,aAPb,aAYAR,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,aACHV,MAAO,CACLW,MAAK,QACLC,eAAc,OACdE,cAAe,YACfX,QAAS,eACTI,QAAS,aAPb,WAYAR,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,eACHV,MAAO,CACLW,MAAK,QACLC,eAAc,OACdE,cAAe,YACfX,QAAS,eACTI,QAAS,aAPb,aAYAR,EAAAtC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,GAAG,yBACHV,MAAO,CACLW,MAAK,QACLC,eAAc,OACdE,cAAe,YACfX,QAAS,eACTI,QAAS,aAPb,gBAqBRV,EAAOH,aAAe,CACpBI,UAAS,IAGID,QCtEAkB,IA5BA,SAAAtC,GAAkB,IAAfuC,EAAevC,EAAfuC,SACV7B,EAAI8B,EAAA9B,KAUV,OACEY,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAAyD,SAAA,KACEnB,EAAAtC,EAAAC,cAACyD,EAAD,CAAQrB,UAAWX,EAAKF,KAAKM,aAAa5B,QAC1CoC,EAAAtC,EAAAC,cAAA,OACEsC,MAAO,CACLK,OAAM,SACNC,SAAU,IACVC,QAAO,sBACPa,WAAY,IAGdrB,EAAAtC,EAAAC,cAAA,YAAOsD","file":"component---src-pages-404-js-a8b20f28852ca8a2f9a7.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title='404: Not found' />\n    <h1>Oh, noes!</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nfunction SEO ({ lang, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={\n        title\n          ? `${title} | ${site.siteMetadata.title}`\n          : site.siteMetadata.title\n      }\n    >\n      <script src='https://embed.runkit.com' data-element-id='runkit' />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`\n    }}\n  >\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0, display: 'inline-block', flexGrow: 1 }}>\n        <Link\n          to='/'\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ flexShrink: 1 }}>\n        <Link\n          to='/reusability'\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            textTransform: 'lowercase',\n            display: 'inline-block',\n            padding: '0 0.5rem'\n          }}\n        >\n          Reusability\n        </Link>\n        <Link\n          to='/immutability'\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            textTransform: 'lowercase',\n            display: 'inline-block',\n            padding: '0 0.5rem'\n          }}\n        >\n          Variables\n        </Link>\n        <Link\n          to='/iteration'\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            textTransform: 'lowercase',\n            display: 'inline-block',\n            padding: '0 0.5rem'\n          }}\n        >\n          Looping\n        </Link>\n        <Link\n          to='/composition'\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            textTransform: 'lowercase',\n            display: 'inline-block',\n            padding: '0 0.5rem'\n          }}\n        >\n          Pipelines\n        </Link>\n        <Link\n          to='/patterns-antipatterns'\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            textTransform: 'lowercase',\n            display: 'inline-block',\n            padding: '0 0.5rem'\n          }}\n        >\n          Patterns\n        </Link>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import './index.css'\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}