{"version":3,"sources":["webpack:///./src/components/Card/index.js","webpack:///./src/components/CardDescription/index.js","webpack:///./src/components/CardImage/index.js","webpack:///./src/components/Cards/index.js","webpack:///./src/components/CardTitle/index.js","webpack:///./src/pages/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/TrailSeparator/index.js","webpack:///./src/components/BreadcrumbTrail/index.js","webpack:///./src/components/PageLayout/index.js"],"names":["Card","styled","div","withConfig","displayName","componentId","CardTitle","p","StyledCardImage","img","CardImage","_ref","name","to","react_default","a","createElement","gatsby_browser_entry","src","Cards","h2","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","_objectWithoutPropertiesLoose","Object","index_es","assign","mdxType","components_Cards","components_Card","components_CardTitle","Link","aria-label","CardDescription","parentName","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","SEO","lang","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","siteMetadata","data-element-id","defaultProps","meta","description","DefaultLinks","Fragment","style","color","textDecoration","textTransform","display","padding","InductiveLinks","DeductiveLinks","NavLinks","pathname","split","Header","_ref2","siteTitle","backgroundColour","getColour","background","marginBottom","alignItems","margin","maxWidth","flexGrow","flexShrink","HeaderWrapper","es","locationProps","Header_Header","Layout","children","_856328897","paddingTop","pattern","makeOnClick","navigate","test","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","gatsby__WEBPACK_IMPORTED_MODULE_5__","TrailSeparator","className","BreadcrumbTrail","trail","undefined","map","href","label","react","key","getCrumbs","PageLayout","_pageContext$frontmat","pageContext","frontmatter"],"mappings":"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","file":"component---src-pages-index-mdx-9afe217392916f0a29bf.js","sourcesContent":["import styled from 'styled-components'\n\nconst Card = styled.div`\n  border: 1px solid gray;\n  height: 22rem;\n  max-width: 100%;\n  width: 16rem;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\nconst CardTitle = styled.p`\n  color: DarkSlateGray;\n  font-size: 0.9rem;\n  margin: 1rem 0.5rem;\n  padding: 0;\n`\n\nexport default CardTitle\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCardImage = styled.img`\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\nStyledCardImage.displayName = 'StyledCardImage'\n\nexport default function CardImage ({ name, to }) {\n  return (\n    <Link to={to}>\n      <StyledCardImage src={`images/${name}`} />\n    </Link>\n  )\n}\n","import styled from 'styled-components'\n\nconst Cards = styled.div`\n  align-items: top;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n`\n\nexport default Cards\n","import styled from 'styled-components'\n\nconst CardTitle = styled.h2`\n  color: LightSlateGray;\n  font-size: 1.2rem;\n  margin: 0.5rem;\n  padding: 0;\n  cursor: pointer;\n\n  &:before {\n    content: '';\n  }\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nexport default CardTitle\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/754368/Workspace/fp-tutorials/fp/src/components/PageLayout/index.js\";\nimport Card from '../components/Card';\nimport CardDescription from '../components/CardDescription';\nimport CardImage from '../components/CardImage';\nimport Cards from '../components/Cards';\nimport CardTitle from '../components/CardTitle';\nimport Link from '../components/Link';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Cards mdxType=\"Cards\">\n  <Card mdxType=\"Card\">\n    <CardImage name='pattern.jpg' to='/inductive/' mdxType=\"CardImage\" />\n    <CardTitle mdxType=\"CardTitle\">\n      <small>How to FP:</small><br />\n      <Link to='/inductive/' aria-label='Bottom-up FP' mdxType=\"Link\">Examples &rarr; concepts</Link> \n    </CardTitle>\n    <CardDescription mdxType=\"CardDescription\">\n      Start with examples and work up to the concepts.\n    </CardDescription>\n  </Card>\n  <Card mdxType=\"Card\">\n    <CardImage name='pattern.jpg' to='/deductive/' mdxType=\"CardImage\" />\n    <CardTitle mdxType=\"CardTitle\">\n      <small>How to FP:</small><br />\n      <Link to='/deductive/' aria-label='Top-down FP' mdxType=\"Link\">Concepts &rarr; examples</Link>\n    </CardTitle>\n    <CardDescription mdxType=\"CardDescription\">\n      Start with the concepts and work down to the examples.\n    </CardDescription>\n  </Card>\n  <Card mdxType=\"Card\">\n    <CardImage name='pattern.jpg' to='/patterns-antipatterns/' mdxType=\"CardImage\" />\n    <CardTitle mdxType=\"CardTitle\">\n      <small>Resources:</small><br />\n      <Link to='/patterns-antipatterns/' aria-label='Patterns and antipatterns' mdxType=\"Link\">Patterns/anti-patterns</Link>\n    </CardTitle>\n    <CardDescription mdxType=\"CardDescription\">\n      Best practices to follow and anti-patterns to avoid.\n    </CardDescription>\n  </Card>\n    </Cards>\n    <h2>{`How to use this resource`}</h2>\n    <p>{`There are two approaches to learning `}{`“`}{`how to FP`}{`”`}{` provided here. You can do either or both. Also included is a list of patterns and anti-patterns for quick reference.`}</p>\n    <h2>{`Styles of learning`}</h2>\n    <p>{`There are two fundamental and `}<em parentName=\"p\">{`opposing`}</em>{` approaches to learning: `}<strong parentName=\"p\">{`inductive`}</strong>{` and `}<strong parentName=\"p\">{`deductive`}</strong>{`. If you've studied science, logic, or philosophy, you've probably heard these terms before.`}</p>\n    <h3>{`Inductive learning: from real-world examples to abstract theory`}</h3>\n    <p>{`Inductive learning is generally the best way to learn. You begin with concrete, real-world examples. After you've seen a few examples and played with them, you begin to notice patterns. From these patterns you derive the abstract rules.`}</p>\n    <p>{`For example, to learn functional programming, you jump right in and begin writing functions. You're not worried about abstract concepts such as referential transparency, side-effects, substitution, or the \"lambda calculus\". You're just writing code.`}</p>\n    <p>{`After we've guided you through a few examples (or given you a Runkit to play with), we extract a principle. We start with the simplest principles and build up from there. We hold off on explaining `}<em parentName=\"p\">{`why`}</em>{` until you've seen the `}<em parentName=\"p\">{`what`}</em>{`. This works best for most people and especially when you're new to a topic.`}</p>\n    <Link to='/inductive/' aria-label='bottom-up fp' mdxType=\"Link\"><strong>Try it the inductive way: learn FP from the bottom up</strong></Link>\n    <h3>{`Deductive learning: from abstract theory to real-world examples`}</h3>\n    <p>{`The other method is to start with abstract principles, explain them, and then move on to examples. This works best for people who are already pretty familiar with the material, or at least with similar materials. You need a lot of `}<strong parentName=\"p\">{`context`}</strong>{`, which beginners don't have.`}</p>\n    <p>{`For example, if you're an expert in, say, Java, and you want to learn C#`}{`—`}{`a very similar language`}{`—`}{`then you can probably start at the theory level and just learn the `}<em parentName=\"p\">{`differences`}</em>{` between the two languages before moving on to examples.`}</p>\n    <p>{`But if you're changing paradigms`}{`—`}{`say from OOP to FP`}{`—`}{`or new to learning programming, then you'll probably do better with the inductive method above.`}</p>\n    <p>{`If you're not sure, then you might try starting with the deductive style below, and then if you find yourself confused, switch to the inductive style above. There are even links in the deductive `}{`“`}{`top-down`}{`”`}{` version to help you do that.`}</p>\n    <p>{`Let us know what you think.`}</p>\n    <Link to='/deductive/' aria-label='top-down fp' mdxType=\"Link\"><strong>Try it the deductive way: learn FP from the top down</strong></Link>\n    <h2>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><Link to='/patterns-antipatterns/' aria-label='Patterns and antipatterns' mdxType=\"Link\">Patterns and antipatterns</Link></li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nfunction SEO ({ lang, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={\n        title\n          ? `${title} | ${site.siteMetadata.title}`\n          : site.siteMetadata.title\n      }\n    >\n      <script src='https://embed.runkit.com' data-element-id='runkit' />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Location } from '@reach/router'\n\nfunction DefaultLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Bottom-up\n      </Link>\n      <Link\n        to='/deductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Top-down\n      </Link>\n      <Link\n        to='/patterns-antipatterns'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Patterns\n      </Link>\n    </>\n  )\n}\n\nfunction InductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive/reusability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Reusability\n      </Link>\n      <Link\n        to='/inductive/immutability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Variables\n      </Link>\n      <Link\n        to='/inductive/iteration'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Looping\n      </Link>\n      <Link\n        to='/inductive/composition'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pipelines\n      </Link>\n    </>\n  )\n}\n\nfunction DeductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/deductive/pure-functions/'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pure functions\n      </Link>\n      <Link\n        to='/deductive/more-fp-concepts'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        More FP concepts\n      </Link>\n    </>\n  )\n}\n\nfunction NavLinks ({ location }) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return <InductiveLinks />\n    case 'deductive':\n      return <DeductiveLinks />\n    default:\n      return <DefaultLinks />\n  }\n}\n\nfunction getColour (location) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return 'ForestGreen'\n    case 'deductive':\n      return 'MediumBlue'\n    case 'patterns-antipatterns':\n      return 'Maroon'\n    default:\n      return 'RebeccaPurple'\n  }\n}\n\nconst Header = ({ siteTitle, location }) => {\n  const backgroundColour = getColour(location)\n\n  return (\n    <header\n      style={{\n        background: backgroundColour,\n        marginBottom: `1.45rem`\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `1.45rem 1.0875rem`\n        }}\n      >\n        <h1 style={{ margin: 0, display: 'inline-block', flexGrow: 1 }}>\n          <Link\n            to='/'\n            style={{\n              color: `white`,\n              textDecoration: `none`\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <div style={{ flexShrink: 1 }}>\n          <NavLinks location={location} />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default function HeaderWrapper (props) {\n  return (\n    <Location>\n      {locationProps => <Header {...locationProps} {...props} />}\n    </Location>\n  )\n}\n","import './index.css'\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nimport { navigate } from '@reach/router'\n\nconst pattern = /#|\\?/g\n\nconst makeOnClick = to => () => navigate(to)\n\nexport default function Link ({ children, to, ...props }) {\n  return pattern.test(to) ? (\n    <a onClick={makeOnClick(to)} {...props}>\n      {children}\n    </a>\n  ) : (\n    <GatsbyLink to={to} {...props}>\n      {children}\n    </GatsbyLink>\n  )\n}\n","import React from 'react'\n\nexport default function TrailSeparator () {\n  return <span className='separator'>&raquo;</span>\n}\n","import { Link } from 'gatsby'\nimport React, { Fragment } from 'react'\n\nimport TrailSeparator from '../TrailSeparator'\n\nfunction getCrumbs (title, trail = []) {\n  return (\n    <>\n      {trail.map(({ href, label }) => (\n        <Fragment key={href}>\n          <Link to={href}>{label}</Link>\n          <TrailSeparator />\n        </Fragment>\n      ))}\n      {title}\n    </>\n  )\n}\n\nexport default function BreadcrumbTrail ({ title, trail }) {\n  if (trail === undefined) {\n    return null\n  }\n\n  return <p>{getCrumbs(title, trail)}</p>\n}\n","import React from 'react'\n\nimport BreadcrumbTrail from '../BreadcrumbTrail'\nimport Layout from '../Layout'\nimport SEO from '../SEO'\n\nfunction PageLayout ({ children, pageContext }) {\n  const { title, trail } = pageContext.frontmatter\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <BreadcrumbTrail title={title} trail={trail} />\n      <article>{children}</article>\n    </Layout>\n  )\n}\n\nexport default PageLayout\n"],"sourceRoot":""}