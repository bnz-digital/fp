{"version":3,"sources":["webpack:///./src/runkits/inductive/advanced-curry.js","webpack:///./src/runkits/inductive/async-pipe.js","webpack:///./src/runkits/inductive/bad-conditions.js","webpack:///./src/runkits/inductive/basic-curry.js","webpack:///./src/runkits/inductive/compose-and-pipe.js","webpack:///./src/runkits/inductive/good-conditions.js","webpack:///./src/runkits/inductive/js-tap.js","webpack:///./src/runkits/inductive/switch.js","webpack:///./src/pages/inductive/composition/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/TrailSeparator/index.js","webpack:///./src/components/BreadcrumbTrail/index.js","webpack:///./src/components/PageLayout/index.js","webpack:///./src/components/Highlighter/index.js","webpack:///./src/components/OffsiteLink/index.js","webpack:///./src/components/CodeBlock/index.js","webpack:///./src/components/TerminologyBlock/index.js","webpack:///./src/runkits/deductive/our-curry.js"],"names":["advanced_curry","code","imports","requires","async_pipe","bad_conditions","basic_curry","compose_and_pipe","good_conditions","js_tap","inductive_switch","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","index_es","assign","mdxType","parentName","TerminologyBlock","OffsiteLink","href","id","CodeBlock","basicCurrySource","advancedCurrySource","ourCurrySource","Highlighter","showLineNumbers","composeAndPipeSource","jsTapSource","asyncPipeSource","badConditionsSource","theme","warn","goodConditionsSource","switchSource","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","SEO","lang","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","siteMetadata","src","data-element-id","defaultProps","meta","description","DefaultLinks","react_default","Fragment","gatsby_browser_entry","to","style","color","textDecoration","textTransform","display","padding","InductiveLinks","DeductiveLinks","NavLinks","pathname","split","Header","_ref2","siteTitle","backgroundColour","getColour","background","marginBottom","alignItems","margin","maxWidth","flexGrow","flexShrink","HeaderWrapper","es","locationProps","Header_Header","Layout","children","_856328897","paddingTop","pattern","makeOnClick","navigate","Link","test","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","gatsby__WEBPACK_IMPORTED_MODULE_5__","TrailSeparator","className","BreadcrumbTrail","trail","undefined","map","label","react","key","getCrumbs","PageLayout","_pageContext$frontmat","pageContext","frontmatter","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_1__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_2__","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_3__","_ref$code","_ref$language","language","_ref$showLineNumbers","_ref$startingLineNumb","startingLineNumber","_ref$theme","_ref$warn","solarizedLight","solarizedDark","target","rel","aria-label","react_runkit__WEBPACK_IMPORTED_MODULE_1__","react_runkit__WEBPACK_IMPORTED_MODULE_1___default","_Highlighter__WEBPACK_IMPORTED_MODULE_2__","_ref$imports","_ref$requires","_useState","useState","show","setShow","useEffect","interval","setInterval","Boolean","window","RunKit","clearInterval","source","nodeVersion","open","setState","cursor"],"mappings":"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","file":"component---src-pages-inductive-composition-index-mdx-c2219dd982473add58a4.js","sourcesContent":["const code = `// Ramda's double underscore __ works like the _ in FP\nconst { __, curry } = require('ramda')\n\nconst doSomeArithmetic = curry((a, b, c, d) => a + b * c - d)\n\n// This is da bomb!\nconsole.log(\\`doSomeArithmetic(10)(7)(5)(3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\n\n// Arguments are supplied to the first empty parameter, so do observe ordering\nconsole.log('doSomeArithmetic(__, __, __, 3)(10, 7, 5) is '\n  + \\`\\${doSomeArithmetic(__, __, __, 3)(10, 7, 5)}\\`)\nconsole.log('doSomeArithmetic(__, 7, __, 3)(10, 5) is '\n  + \\`\\${doSomeArithmetic(__, 7, __, 3)(10, 5)}\\`)\nconsole.log('doSomeArithmetic(__, __, __, 3)(10, __, 5)(7) is '\n  + \\`\\${doSomeArithmetic(__, __, __, 3)(10, __, 5)(7)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { otherwise, pick, pipe, then } = require('ramda')\n\nconst makeQuery = email => ({ query: email })\nconst useDefault = () => ({\n  nameGiven: 'Aleister',\n  nameFamily: 'Crowley',\n  email: 'aleister@goldendawn.com'\n})\n\n// Use setTimeout to simulate an asynchronous process\nconst fetchProfile = options => new Promise((resolve, reject) => {\n  options.query === 'bob@slack.com'\n    ? setTimeout(() => resolve({\n        nameGiven: 'Bob',\n        nameFamily: 'Dobbs',\n        email: 'bob@slack.com'\n      }), 3000)\n    : setTimeout(() => reject({\n        error: 'Bad email address'\n      }), 6000)\n})\n\n// Returns a promise\nconst getProfleFromEmail = pipe(\n  makeQuery,                               // convert email to query\n  fetchProfile,                            // use query to fetch profile\n  otherwise(useDefault),                   // default profile if fetch fails\n  then(pick(['nameGiven', 'nameFamily']))  // extract just the names from the profile\n)\n\n// The first of these fails and gets the default profile\n// The second passes and retrieves the profile for bob@slack.com\n// Note the delay and the order of output\nconsole.log('Wait for it!')\ngetProfleFromEmail('joe@chicago.com').then(console.log) // resolves in 6 seconds\ngetProfleFromEmail('bob@slack.com').then(console.log)   // resolves in 3 seconds\n`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `// DO NOT DO THIS!\nfunction getColourTheBadWay (a, b) {\n  let colour\n\n  if (a && b) {\n    colour = 'red'\n  } else if (a) {\n    colour = 'yellow'\n  } else if (b) {\n    colour = 'orange'\n  } else {\n    colour = 'black'\n  }\n\n  return colour\n}\n\nconsole.log(\\`getColourTheBadWay(true, true) is \\${getColourTheBadWay(true, true)}\\`)\nconsole.log(\\`getColourTheBadWay(true, false) is \\${getColourTheBadWay(true, false)}\\`)\nconsole.log(\\`getColourTheBadWay(false, true) is \\${getColourTheBadWay(false, true)}\\`)\nconsole.log(\\`getColourTheBadWay(false, false) is \\${getColourTheBadWay(false, false)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { curry } = require('ramda')\n\nconst doSomeArithmetic = curry((a, b, c, d) => a + b * c - d)\n\nconsole.log(\\`doSomeArithmetic(10, 7, 5, 3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10, 7, 5)(3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10, 7)(5, 3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10)(7, 5, 3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10, 7)(5)(3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10)(7)(5, 3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)\nconsole.log(\\`doSomeArithmetic(10)(7)(5)(3) is \\${doSomeArithmetic(10, 7, 5, 3)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { __, add, compose, divide, multiply, pipe, subtract } = require('ramda')\n\n// The hard-to-read way\nconst doTheMathNested = x => divide(\n  multiply(\n    9,\n    subtract(\n      20,\n      add(5, x)\n    ),\n  ),\n  60\n)\n\n// add and multiply are commutative, so ordering of parameters doesn't matter\n// subtract and divide are not cummutative, so ordering counts\n// Here we want to divide our number by 60, not divide 60 by it, so we need the __ placeholder\n// compose runs right to left, which is more traditional, but possibly harder to read\nconst doTheMathByCompose = compose(\n  divide(__, 60),\n  multiply(9),\n  subtract(20),\n  add(5)\n)\n\n// pipe runs left to right, which may be easier to comprehend\nconst doTheMathByPipe = pipe(\n  add(5),\n  subtract(20),\n  multiply(9),\n  divide(__, 60)\n)\n\n// ((20 - (7  + 5)) * 9) / 60\nconsole.log(\\`doTheMathNested(7) is \\${doTheMathNested(7)}\\`)\nconsole.log(\\`doTheMathByCompose(7) is \\${doTheMathByCompose(7)}\\`)\nconsole.log(\\`doTheMathByPipe(7) is \\${doTheMathByPipe(7)}\\`)\nconsole.log(\\`((20 - (7  + 5)) * 9) / 60 is \\${((20 - (7  + 5)) * 9) / 60}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `function getColour (a, b) {\n  if (a && b) { return 'blue' }\n  \n  if (a) { return 'cyan' }\n  \n  if (b) { return 'magenta' }\n  \n  return 'white'\n}\n\nconsole.log(\\`getColour(true, true) is \\${getColour(true, true)}\\`)\nconsole.log(\\`getColour(true, false) is \\${getColour(true, false)}\\`)\nconsole.log(\\`getColour(false, true) is \\${getColour(false, true)}\\`)\nconsole.log(\\`getColour(false, false) is \\${getColour(false, false)}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { __, add, curry, map, pipe, reduce, tap } = require('ramda')\n\nconst binaries = ['1', '100', '1001', '10000', '11001']\n\n// We can curry the JS parseInt function\n// Then partially apply it by supplying the second parameter\n// parseBinary takes a binary number string and converts it to an integer\nconst parseBinary = curry(parseInt)(__, 2)\n\n// We can use tap to log out the value at any point in the pipe\n// THIS IS A SIDE EFFECT! DO NOT USE tap TO CHANGE STATE!\nconst sumBinary = pipe(\n  tap(console.log),\n  map(parseBinary),    // map the binary strings to integers\n  tap(console.log),\n  map(Math.sqrt),      // map the integers to their square roots\n  tap(console.log),\n  reduce(add, 0),      // add the square roots up to get the sum\n  tap(console.log),\n  n => n.toString(2),  // convert the integer sum to a binary number string\n  tap(console.log)\n)\n\nconsole.log(\\`binaries is [\\${binaries}]\\`)\nconsole.log('Tapping the pipe:')\n\nconst sum = sumBinary(binaries)\n\nconsole.log('Pipe complete')\nconsole.log(\\`The sum of the squares of the binaries is binary \\${sum}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","const code = `const { sort } = require('ramda')\n\nfunction selectComparator (type) {\n  switch(type) {\n    case 'DESC':\n      return (a, b) => b - a\n    case 'LENGTH_ASC':\n      return (a, b) => a.length - b.length\n    case 'LENGTH_DESC':\n      return (a, b) => b.length - a.length\n    default:\n      return (a, b) => a - b\n  }\n}\n\nconst names = ['Bob', 'Carol', 'Ted', 'Alice', 'Samson', 'Delilah']\n\n// Array.sort sorts in place mutating the array\n// DO NOT USE THIS!\nconsole.log('names is:', names)\nconsole.log('names.sort() is', names.sort())\nconsole.log('names is now:', names)\nconsole.log('Bad sort. Bad! Let\\\\'s try again:')\n\n// USE THIS\nconsole.log(\n  \\`sort(selectComparator('LENGTH_DESC'), names) is:\\`,\n  sort(selectComparator('LENGTH_DESC'), names)\n)\nconsole.log('names is unchanged:', names)\nconsole.log(\n  \\`sort(selectComparator('LENGTH_ASC'), names) is:\\`,\n  sort(selectComparator('LENGTH_ASC'), names)\n)\nconsole.log(\n  \\`sort(selectComparator('DESC'), [2, 5, 3, 9, 1]) is:\\`,\n  sort(selectComparator('DESC'), [2, 5, 3, 9, 1])\n)\nconsole.log(\n  \\`sort(selectComparator('ASC'), [2, 5, 3, 9, 1]) is:\\`,\n  sort(selectComparator('ASC'), [2, 5, 3, 9, 1])\n)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/754368/Workspace/fp-tutorials/fp/src/components/PageLayout/index.js\";\nimport Link from '../../../components/Link';\nimport CodeBlock from '../../../components/CodeBlock';\nimport Highlighter from '../../../components/Highlighter';\nimport OffsiteLink from '../../../components/OffsiteLink';\nimport TerminologyBlock from '../../../components/TerminologyBlock';\nimport advancedCurrySource from '../../../runkits/inductive/advanced-curry';\nimport asyncPipeSource from '../../../runkits/inductive/async-pipe';\nimport badConditionsSource from '../../../runkits/inductive/bad-conditions';\nimport basicCurrySource from '../../../runkits/inductive/basic-curry';\nimport composeAndPipeSource from '../../../runkits/inductive/compose-and-pipe';\nimport goodConditionsSource from '../../../runkits/inductive/good-conditions';\nimport jsTapSource from '../../../runkits/inductive/js-tap';\nimport ourCurrySource from '../../../runkits/deductive/our-curry';\nimport switchSource from '../../../runkits/inductive/switch';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2>{`We can has pipelines!`}</h2>\n    <p>{`Everything we've discussed up to this point has been prologue. The `}<strong parentName=\"p\">{`true`}</strong>{` power of functional programming comes from `}<strong parentName=\"p\">{`combining functions`}</strong>{` to create a kind of function `}{`“`}{`pipeline`}{`”`}{`.`}</p>\n    <p>{`Here is the `}<strong parentName=\"p\">{`most important thing`}</strong>{` for you to understand about piping data from one function to another:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<strong parentName=\"li\">{`first function`}</strong>{` in a pipeline can take `}<strong parentName=\"li\">{`any number of parameters`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Each succeeding function in the pipeline `}<strong parentName=\"li\">{`must take only a single parameter`}</strong>{`.`}</li>\n    </ul>\n    <p>{`The reason for this should be obvious: every function after the first one is getting its input from the output of the preceeding function. As a function can only return a single value, there is no way to pass more than one argument to the next function in the pipe. Right?`}</p>\n    <TerminologyBlock mdxType=\"TerminologyBlock\">The number of parameters a function accepts is called its <OffsiteLink href='https://en.wikipedia.org/wiki/Arity' mdxType=\"OffsiteLink\">arity</OffsiteLink>. The above can be restated thus: In a pipeline of functions, the first function can have <em>any</em> arity, but each succeeding function must have arity of 1.<br /><br />This process of combining functions together is called <OffsiteLink href='https://en.wikipedia.org/wiki/Function_composition_(computer_science)' mdxType=\"OffsiteLink\">function composition</OffsiteLink>. We can compose functions in JavaScript because functions are <OffsiteLink href='https://en.wikipedia.org/wiki/First-class_function' mdxType=\"OffsiteLink\">first-class citizens</OffsiteLink>, meaning that they can be passed into and returned from other functions.<br /><br />Functions that either take or return another function are called <OffsiteLink href='https://en.wikipedia.org/wiki/Higher-order_function' mdxType=\"OffsiteLink\">higher-order functions</OffsiteLink>. JavaScript supports higher-order functions.</TerminologyBlock>\n    <p>{`Of course, functions in a pipe other than the first function `}<em parentName=\"p\">{`can`}</em>{` accept more than one parameter. It's just that only a single argument will be passed from the preceeding function. But if the parameters after the first one have suitable default values, that can still work.`}</p>\n    <p>{`But pipelining functions will become much more useful to us if there is a way to `}{`“`}{`partially apply`}{`”`}{` functions so that we `}{`“`}{`pre-load`}{`”`}{` them with the other arguments they need. We can do this by creating functions that can return other functions if they are called with fewer arguments than the number of parameters they expect.`}</p>\n    <TerminologyBlock mdxType=\"TerminologyBlock\">When we modify a function to permit it to accept a subset of its parameters (i.e., a number of arguments less than the &ldquo;arity&rdquo; of the function), and to return a new function that &ldquo;remembers&rdquo; the arguments already passed, accepts the remaining parameters, and then applies all of them and returns the result, then we call that <OffsiteLink href='https://en.wikipedia.org/wiki/Currying' mdxType=\"OffsiteLink\">currying</OffsiteLink> the function, and we say that the function has been &ldquo;curried&rdquo;.<br /><br />When we create a <OffsiteLink href='https://en.wikipedia.org/wiki/Closure_(computer_programming)' mdxType=\"OffsiteLink\">closure</OffsiteLink> by passing fewer arguments to a function than there are parameters and getting back a new function, we call that <OffsiteLink href='https://en.wikipedia.org/wiki/Partial_application' mdxType=\"OffsiteLink\">partial application</OffsiteLink> and the function (closure) returned a &ldquo;partially-applied function&rdquo;.</TerminologyBlock>\n    <p>{`Here is where we `}<strong parentName=\"p\">{`separate the pros from the novices`}</strong>{`. We mentioned default values for the extra parameters above, and if you think that way, then your inclination will be to make the data that we intend to pass down the pipe the `}<strong parentName=\"p\">{`first`}</strong>{` parameter, because that's the one that will be passed by the preceeding function, right?`}</p>\n    <p>{`But this means that the only way to fill the remaining arguments is with default values, which is pretty limiting.`}</p>\n    <p>{`But if we can apply fewer arguments than there are parameters to a function, and get back a function that remembers those arguments and accepts the remaining parameters, then `}<strong parentName=\"p\">{`we want the parameter that will be `}{`“`}{`chained`}{`”`}{` to be the `}<em parentName=\"strong\">{`last`}</em>{` parameter`}</strong>{`, not the first. We'll see this when we get to using `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` below.`}</p>\n    <p><strong parentName=\"p\">{`This is where the Underscore and Lodash libraries went wrong`}</strong>{` (fixed in Lodash/FP), and what Ramda and Sanctuary got so right.`}</p>\n    <p>{`In Underscore and Lodash, the argument we want to pass down the pipe is passed as the `}<strong parentName=\"p\">{`first`}</strong>{` parameter, which means there is no way to set any remaining parameters, except by default value. Underscore and Lodash get around this by forcing you to add a `}<inlineCode parentName=\"p\">{`chain`}</inlineCode>{` function call`}{`—`}{`an absolute code `}<em parentName=\"p\">{`stink`}</em>{`—`}{`and they expect you to pipe function calls by dotting them together.`}</p>\n    <p>{`Ramda and Sanctuary, in contrast, allow you to `}{`“`}{`partially apply`}{`”`}{` functions so that only the last parameter remains unfilled, and then use `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` to chain them together to create a new function that takes any number of parameters, passes the data down the chain of functions, and returns the final result.`}</p>\n    <p>{`Enough chat! Let's cut to the chase!`}</p>\n    <h3 id='curry'>Use <code>curry</code> to make functions that make functions</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`curry`}</inlineCode>{` function takes a function that expects one or more parameters and turns it into a function that allows partial application of those parameters, ideally in any combination (but preserving order). Like this:`}</p>\n    <CodeBlock {...basicCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`But with Ramda's `}<inlineCode parentName=\"p\">{`curry`}</inlineCode>{` function, we can also use the `}<inlineCode parentName=\"p\">{`__`}</inlineCode>{` placeholder for some really clever FP:`}</p>\n    <CodeBlock {...advancedCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`Vanilla JS is quite a bit more difficult. The easiest way is simply to be functional and create our own curry function:`}</p>\n    <CodeBlock {...ourCurrySource} mdxType=\"CodeBlock\" />\n    <p>{`Lovely. But our own `}<inlineCode parentName=\"p\">{`curry`}</inlineCode>{` function does not allow the use of the `}<inlineCode parentName=\"p\">{`__`}</inlineCode>{` placeholder. We could add that, but now our function becomes quite a bit more complex`}{`—`}{`if you check the Ramda source code, they break it out into four different functions and a constant.`}</p>\n    <p>{`Our suggestion: If you want to do serious functional programming with these sorts of functions, just use Ramda or Sanctuary.`}</p>\n    <p>{`With a good build system, e.g., Webpack, you should be able to `}{`“`}{`tree shake`}{`”`}{` out any unused code, so you don't bulk up your compiled code.`}</p>\n    <p>{`Now to see what we can do with `}{`“`}{`curried`}{`”`}{` functions.`}</p>\n    <p>{`(Note: Pretty much every function included in Ramda is pre-curried, so you can partially apply any of them. And you have the `}<inlineCode parentName=\"p\">{`curry`}</inlineCode>{` function to curry your own functions. Just remember, as Stan Lee reminds us, that with great power comes great responsibility.)`}</p>\n    <h3 id='pipe'>Use <code>pipe</code> or <code>compose</code> to combine functions into pipelines</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` functions `}<strong parentName=\"p\">{`do the same thing`}</strong>{`, just in different directions. Each takes functions as parameters (in Sanctuary they are passed in a single parameter as an array). Each applies the functions one after the other. The difference is: `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` applies them left to right, and `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` applies them right to left.`}</p>\n    <p>{`The reasons for this are historical. Use whichever makes more sense to you.`}</p>\n    <p>{`Consider a situation such as this:`}</p>\n    <Highlighter code={`const combinedFunctions = (a, b, c) => outerFunction(\n  middleFunction(\n    innerFunction(a, b, c)\n  )\n)`} mdxType=\"Highlighter\" />\n    <p>{`This is essentially what `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` do, but you don't need to wrap `}<inlineCode parentName=\"p\">{`innerFunction`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`middleFunction`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`outerFunction`}</inlineCode>{` in a yet another function as we do above. You just pass them to `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` and you get a function back.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` function takes the function arguments `}<strong parentName=\"p\">{`in the order that they will be applied`}</strong>{`. In the above, nested example, the functions will be applied from the innermost to the outermost, right? So our `}<inlineCode parentName=\"p\">{`pipe`}</inlineCode>{` would look like this:`}</p>\n    <Highlighter code={`const combinedFunctions = pipe(innerFunction, middleFunction, outerFunction)`} showLineNumbers={false} mdxType=\"Highlighter\" />\n    <p>{`In contrast, the `}<inlineCode parentName=\"p\">{`compose`}</inlineCode>{` function follows the `}{`“`}{`nested`}{`”`}{` order that we see them in the above example (outermost to innermost):`}</p>\n    <Highlighter code={`const combinedFunctions = compose(outerFunction, middleFunction, innerFunction)`} showLineNumbers={false} mdxType=\"Highlighter\" />\n    <p>{`But the functions are still applied in the same order: `}<inlineCode parentName=\"p\">{`innerFunction`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`middleFunction`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`outerFunction`}</inlineCode>{`.`}</p>\n    <p>{`So `}<inlineCode parentName=\"p\">{`innerFunction`}</inlineCode>{` can take as many parameters as it needs, but `}<inlineCode parentName=\"p\">{`middleFunction`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`outerFunction`}</inlineCode>{` will each be passed only the result of the previous function, so they can only operate on a single parameter.`}</p>\n    <p>{`Suppose I used the (curried) Ramda functions, `}<inlineCode parentName=\"p\">{`add`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`subtract`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`multiply`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`divide`}</inlineCode>{`. Each takes two parameters, so I will need to supply one of them for each (except, possibly, the first function in the pipeline).`}</p>\n    <p>{`I want to create a function that takes a number, adds five, subtracts that sum from twenty, multiplies the difference by nine, and divides that product by sixty, in that order.`}</p>\n    <p>{`Yes, yes, yes. We know. This is an absurd example and we'd just use the `}<inlineCode parentName=\"p\">{`+`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`-`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` operators. But it's about the principle! So let's run with it.`}</p>\n    <p>{`Here's our example:`}</p>\n    <CodeBlock {...composeAndPipeSource} mdxType=\"CodeBlock\" />\n    <p>{`Here's a more complex example in which we use `}<inlineCode parentName=\"p\">{`tap`}</inlineCode>{` to `}{`“`}{`tap`}{`”`}{` into the pipe and use a side effect to log the value to the console. Remember that `}<inlineCode parentName=\"p\">{`tap`}</inlineCode>{` passes the value unchanged, so it is always and `}<em parentName=\"p\">{`only`}</em>{` used for side effects such as logging. `}<strong parentName=\"p\">{`Do not use `}<inlineCode parentName=\"strong\">{`tap`}</inlineCode>{` to mutate program state!`}</strong></p>\n    <CodeBlock {...jsTapSource} mdxType=\"CodeBlock\" />\n    <p>{`We can also use Ramda's `}<inlineCode parentName=\"p\">{`then`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`otherwise`}</inlineCode>{` to handle async behaviour with Promises. See if you can figure out what this does:`}</p>\n    <CodeBlock {...asyncPipeSource} mdxType=\"CodeBlock\" />\n    <h3 id='state-state-state'>Think in terms of state!</h3>\n    <p>{`In the simplest sense, the `}<strong parentName=\"p\">{`state`}</strong>{` of your application is anything that could conceivably be different at time t`}<sub>{`2`}</sub>{` than it was at time t`}<sub>{`1`}</sub>{`: `}<code>{`value`}<sub>{`t1`}</sub>{` !== value`}<sub>{`t2`}</sub></code>{`.`}</p>\n    <p>{`When we work in a functional paradigm, our concerns about state are twofold:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Do not destroy state: make a new copy`}</li>\n      <li parentName=\"ol\">{`Do not share state between processes: keep processes isolated`}</li>\n    </ol>\n    <p>{`We can't always keep these promises, but we should do our utmost to live up to these best practices.`}</p>\n    <p>{`The two most important practices for handling state properly are `}<strong parentName=\"p\">{`immutability`}</strong>{` and keeping our functions `}<strong parentName=\"p\">{`pure`}</strong>{`.`}</p>\n    <p><strong parentName=\"p\">{`Immutability`}</strong>{` means that once we create a variable, we never reassign it or change it. It is `}{`“`}{`frozen`}{`”`}{`. If we need to change it, we make a new copy that reflect the change. This means that we never lose track of our previous state (until we want to). It also means that if we know what value a variable had when it was assigned, then we know what value it has now. It never changes.`}</p>\n    <p><strong parentName=\"p\">{`Pure functions`}</strong>{` help us to isolate processes to avoid sharing state. They also help with immutability by always returning a copy rather than mutating in place. A pure function, if you recall, is a function that always returns the same result for the same arguments, and does not affect the program in any other way: no reaching out from within a function; no reaching into functions to muck about.`}</p>\n    <p>{`How can we avoid mutating variables? The best way is to `}<em parentName=\"p\">{`use functions`}</em>{` instead of loops, conditionals, and other constructs.`}</p>\n    <p>{`For example, suppose that I want to assign a variable `}<inlineCode parentName=\"p\">{`colour`}</inlineCode>{` differntly depending on the value of variables `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`b`}</inlineCode>{`:`}</p>\n    <CodeBlock {...badConditionsSource} theme='dark' warn={() => <small>Lasciate ogne speranza, voi ch'entrate!</small>} mdxType=\"CodeBlock\" />\n    <p>{`A much better style is this:`}</p>\n    <CodeBlock {...goodConditionsSource} mdxType=\"CodeBlock\" />\n    <p>{`Not only to we get rid of `}<inlineCode parentName=\"p\">{`let`}</inlineCode>{`, assigning a variable altogether, and mutation, but our code is cleaner, more readable, and more succinct. We also lose the `}<inlineCode parentName=\"p\">{`else`}</inlineCode>{` construct. The function returns the moment the correct answer is found. The use of `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` is very clear.`}</p>\n    <p>{`What's more, with the use of `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` the `}<inlineCode parentName=\"p\">{`switch`}</inlineCode>{` statement, formerly something to avoid, becomes quite useful as a sort of switchboard or pattern matcher:`}</p>\n    <CodeBlock {...switchSource} mdxType=\"CodeBlock\" />\n    <p>{`You will see this pattern over and over again.`}</p>\n    <p>{`When we mutate variables or reassign them, and when we reach outside of functions to change state in the global context, we create chaos. Anarchy! Who knows what is changing what else and when?`}</p>\n    <p>{`It's like spaghetti code. You find yourself tracing from line to line and function to function and even file to file just to figure out where something was mutated.`}</p>\n    <p>{`Avoid the anarchy! A well-regulated state, being necessary to the security of your code base, the right of variables to be free of mutation and functions to be free of side effects shall not be infringed.`}</p>\n    <p>{`Functional programming gives you all the tools to build fast, efficient, understandable, and error-free code. Embrace the functional style.`}</p>\n    <blockquote>Things fall apart; the centre cannot hold;<br />Mere anarchy is loosed upon the world...</blockquote>\n    <p>{`What rough beast, indeed.`}</p>\n    <small>Errors, bugs, suggestions, questions? Surplus rye whiskey? Contact <a href='mailto:charles_munat@bnz.co.nz'>Charles Munat</a></small>.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nfunction SEO ({ lang, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={\n        title\n          ? `${title} | ${site.siteMetadata.title}`\n          : site.siteMetadata.title\n      }\n    >\n      <script src='https://embed.runkit.com' data-element-id='runkit' />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Location } from '@reach/router'\n\nfunction DefaultLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Bottom-up\n      </Link>\n      <Link\n        to='/deductive'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Top-down\n      </Link>\n      <Link\n        to='/patterns-antipatterns'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Patterns\n      </Link>\n    </>\n  )\n}\n\nfunction InductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/inductive/reusability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Reusability\n      </Link>\n      <Link\n        to='/inductive/immutability'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Variables\n      </Link>\n      <Link\n        to='/inductive/iteration'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Looping\n      </Link>\n      <Link\n        to='/inductive/composition'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pipelines\n      </Link>\n    </>\n  )\n}\n\nfunction DeductiveLinks () {\n  return (\n    <>\n      <Link\n        to='/deductive/pure-functions/'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        Pure functions\n      </Link>\n      <Link\n        to='/deductive/more-fp-concepts'\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          textTransform: 'lowercase',\n          display: 'inline-block',\n          padding: '0 0.5rem'\n        }}\n      >\n        More FP concepts\n      </Link>\n    </>\n  )\n}\n\nfunction NavLinks ({ location }) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return <InductiveLinks />\n    case 'deductive':\n      return <DeductiveLinks />\n    default:\n      return <DefaultLinks />\n  }\n}\n\nfunction getColour (location) {\n  switch (location.pathname.split('/')[1]) {\n    case 'inductive':\n      return 'ForestGreen'\n    case 'deductive':\n      return 'MediumBlue'\n    case 'patterns-antipatterns':\n      return 'Maroon'\n    default:\n      return 'RebeccaPurple'\n  }\n}\n\nconst Header = ({ siteTitle, location }) => {\n  const backgroundColour = getColour(location)\n\n  return (\n    <header\n      style={{\n        background: backgroundColour,\n        marginBottom: `1.45rem`\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `1.45rem 1.0875rem`\n        }}\n      >\n        <h1 style={{ margin: 0, display: 'inline-block', flexGrow: 1 }}>\n          <Link\n            to='/'\n            style={{\n              color: `white`,\n              textDecoration: `none`\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <div style={{ flexShrink: 1 }}>\n          <NavLinks location={location} />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default function HeaderWrapper (props) {\n  return (\n    <Location>\n      {locationProps => <Header {...locationProps} {...props} />}\n    </Location>\n  )\n}\n","import './index.css'\n\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nimport { navigate } from '@reach/router'\n\nconst pattern = /#|\\?/g\n\nconst makeOnClick = to => () => navigate(to)\n\nexport default function Link ({ children, to, ...props }) {\n  return pattern.test(to) ? (\n    <a onClick={makeOnClick(to)} {...props}>\n      {children}\n    </a>\n  ) : (\n    <GatsbyLink to={to} {...props}>\n      {children}\n    </GatsbyLink>\n  )\n}\n","import React from 'react'\n\nexport default function TrailSeparator () {\n  return <span className='separator'>&raquo;</span>\n}\n","import { Link } from 'gatsby'\nimport React, { Fragment } from 'react'\n\nimport TrailSeparator from '../TrailSeparator'\n\nfunction getCrumbs (title, trail = []) {\n  return (\n    <>\n      {trail.map(({ href, label }) => (\n        <Fragment key={href}>\n          <Link to={href}>{label}</Link>\n          <TrailSeparator />\n        </Fragment>\n      ))}\n      {title}\n    </>\n  )\n}\n\nexport default function BreadcrumbTrail ({ title, trail }) {\n  if (trail === undefined) {\n    return null\n  }\n\n  return <p>{getCrumbs(title, trail)}</p>\n}\n","import React from 'react'\n\nimport BreadcrumbTrail from '../BreadcrumbTrail'\nimport Layout from '../Layout'\nimport SEO from '../SEO'\n\nfunction PageLayout ({ children, pageContext }) {\n  const { title, trail } = pageContext.frontmatter\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <BreadcrumbTrail title={title} trail={trail} />\n      <article>{children}</article>\n    </Layout>\n  )\n}\n\nexport default PageLayout\n","import React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {\n  solarizedDark,\n  solarizedLight\n} from 'react-syntax-highlighter/dist/esm/styles/hljs'\n\nexport default function Highlighter ({\n  code = '',\n  language = 'javascript',\n  showLineNumbers = true,\n  startingLineNumber = 1,\n  theme = 'light',\n  warn = () => null\n}) {\n  return (\n    <>\n      {warn()}\n      <SyntaxHighlighter\n        language={language}\n        style={theme === 'light' ? solarizedLight : solarizedDark}\n        showLineNumbers={showLineNumbers}\n        startingLineNumber={startingLineNumber}\n      >\n        {code}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function OffsiteLink ({ children, href }) {\n  return (\n    <a\n      href={href}\n      target='_blank'\n      rel='noopener noreferrer'\n      aria-label='Offsite link: opens in new window'\n      className='offsite-link'\n      title='Offsite link: opens in a new window'\n    >\n      {children}\n    </a>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Embed from 'react-runkit'\n\nimport Highlighter from '../Highlighter'\n\nexport default function CodeBlock ({\n  code = '',\n  imports = '',\n  requires = '',\n  theme = 'light',\n  warn = () => null\n}) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShow(Boolean(window) && Boolean(window.RunKit))\n    }, 1000)\n\n    if (show) {\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return show ? (\n    <div className='code-block'>\n      {warn()}\n      <Embed\n        source={`${requires}${code}`}\n        nodeVersion='12'\n        theme={`solarized-${theme}`}\n      />\n    </div>\n  ) : (\n    <Highlighter code={`${imports}${code}`} theme={theme} warn={warn} />\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function TerminologyBlock ({ children }) {\n  const [open, setState] = useState(false)\n\n  const toggleState = () => (open ? setState(false) : setState(true))\n\n  return (\n    <>\n      <p>\n        <a onClick={toggleState} style={{ cursor: 'pointer' }}>\n          <strong>{open ? 'Hide ' : 'Show '} Evil Terminology</strong>\n        </a>\n      </p>\n      {open && <blockquote>{children}</blockquote>}\n    </>\n  )\n}\n","const code = `// curryN takes the number of parameters and the function\nconst curryN = (n, f) => (...args) => // return a function that takes some arguments\n  args.length === n  // if all the arguments have been supplied\n    ? f(...args)     // then call the function with the args and return the result\n    : curryN(\n      n - args.length,\n      (...newArgs) => f(...args, ...newArgs)\n    )                // else recurse for the remaining arguments\n\nconst curry = f => curryN(f.length, f) // Create a closure on the number of parameters\n  \n// A function that takes 3 parameters\nconst uncurried = (x, y, z) => ([x, y, z])\n\n// Try applying it without currying\nconsole.log(\\`uncurried(1, 2, 3) is \\${JSON.stringify(uncurried(1, 2, 3))}\\`)\n\n// Oops\ntry {\n  console.log(\\`uncurried(1, 2)(3) is \\${JSON.stringify(uncurried(1, 2)(3))}\\`)\n  console.log(\\`uncurried(1)(2, 3) is \\${JSON.stringify(uncurried(1)(2, 3))}\\`)\n  console.log(\\`uncurried(1)(2)(3) is \\${JSON.stringify(uncurried(1)(2)(3))}\\`)\n} catch (e) {\n  console.log(\\`Uh, oh: \\${e}\\`)\n}\n\n// Now let's try again, but with our function curried properly\nconst curried = curry((x, y, z) => ([x, y, z]))\n\n// Everything works\nconsole.log(\\`curried(4, 5, 6) is \\${JSON.stringify(curried(4, 5, 6))}\\`)\nconsole.log(\\`curried(4, 5)(6) is \\${JSON.stringify(curried(4, 5)(6))}\\`)\nconsole.log(\\`curried(4)(5, 6) is \\${JSON.stringify(curried(4)(5, 6))}\\`)\nconsole.log(\\`curried(4)(5)(6) is \\${JSON.stringify(curried(4)(5)(6))}\\`)\n\n// We can partially apply our function to create new functions\n// that \"remember\" one or more arguments\nconst prependSeven = curried(7)\nconst prependSevenAndEight = prependSeven(8)\nconsole.log(\\`prependSevenAndEight(9) is \\${JSON.stringify(prependSevenAndEight(9))}\\`)`\n\nconst imports = ``\n\nconst requires = ``\n\nexport default {\n  code,\n  imports,\n  requires\n}\n"],"sourceRoot":""}